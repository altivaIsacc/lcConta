<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevExpress.Utils</name>
    </assembly>
    <members>
        <member name="T:DevExpress.XtraPrinting.PageInfo.PageInfo">
            <summary>
                <para>Contains the values that define what kind of information is displayed in the current <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.DateTime">
            <summary>
                <para>Indicates that <B>DateTime</B> information is displayed in the current <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.None">
            <summary>
                <para>Indicates that the <see cref="P:DevExpress.XtraPrinting.PageInfoBrick.Format"/> property value is displayed in the current <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.Number">
            <summary>
                <para>Indicates that the current page number is displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.NumberOfTotal">
            <summary>
                <para>Indicates that both the current page number and the total number of pages in the current report are displayed in the current <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.RomHiNumber">
            <summary>
                <para>Indicates that the current page number is displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/> using roman numerals in uppercase.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.RomLowNumber">
            <summary>
                <para>Indicates that the current page number is displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/> using roman numerals in lowercase.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.UserName">
            <summary>
                <para>Indicates that the user name for the current thread is displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.XtraPrinting.BrickAlignment.BrickAlignment">
            <summary>
                <para>Specifies brick alignment relative to its layout rectangle.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BrickAlignment.Center">
            <summary>
                <para>Specifies whether a brick is aligned by the center of the layout rectangle.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BrickAlignment.Far">
            <summary>
                <para>Specifies wheter a brick is aligned away from the original position of the layout rectangle.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BrickAlignment.Near">
            <summary>
                <para>Specifies the text be aligned near the layout. In a left-to-right layout, the near position is left. In a right-to-left layout, the near position is right. 
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BrickAlignment.None">
            <summary>
                <para>Cancels brick alignment.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.XtraPrinting.BorderSide.BorderSide">
            <summary>
                <para>Specifies the borders displayed around a brick.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.All">
            <summary>
                <para>Applies all borders to a brick.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.Bottom">
            <summary>
                <para>Applies the bottom border to a brick.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.Left">
            <summary>
                <para>Applies the left border to a brick.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.None">
            <summary>
                <para>No borders are applied to a brick.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.Right">
            <summary>
                <para>Applies the right border to a brick.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.Top">
            <summary>
                <para>Applies the top border to a brick.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.BaseOptionChangedEventArgs">
            <summary>
                <para>Provides data for the events that fire after option changes .
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.#ctor(System.String,System.Object,System.Object)">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.Utils.Controls.BaseOptionChangedEventArgs"/> object.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value representing the name of the option whose value has been changed. This value is assigned to the <see cref="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.Name"/> property.

            </param>
            <param name="oldValue">
		A <see cref="T:System.Object"/> value representing the option's previous value. This value is assigned to the <see cref="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.OldValue"/> property.

            </param>
            <param name="newValue">
		A <see cref="T:System.Object"/> value representing the option's current value. This value is assigned to the <see cref="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.NewValue"/> property.

            </param>

        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.#ctor">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.Utils.Controls.BaseOptionChangedEventArgs"/> object with default values.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.Name">
            <summary>
                <para>Gets the name of the option whose value has been changed.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value representing the option's name.
</value>

        </member>
        <member name="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.NewValue">
            <summary>
                <para>Gets or sets the option's current value. 
</para>
            </summary>
            <value>A <see cref="T:System.Object"/> value representing the option's current value.
</value>

        </member>
        <member name="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.OldValue">
            <summary>
                <para>Gets the option's previous value.
</para>
            </summary>
            <value>A <see cref="T:System.Object"/> value representing the option's previous value.
</value>

        </member>
        <member name="T:DevExpress.Utils.Controls.BaseOptions.BaseOptions">
            <summary>
                <para>Serves as a base for classes representing options.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.#ctor">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> object.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
            <summary>
                <para>Copies all settings from the options object passed as a parameter.
</para>
            </summary>
            <param name="options">
		A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object. 

            </param>

        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.BeginUpdate">
            <summary>
                <para>Prevents the control from being updated until the <see cref="M:DevExpress.Utils.Controls.BaseOptions.CancelUpdate"/> or <see cref="M:DevExpress.Utils.Controls.BaseOptions.EndUpdate"/> method is called.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.CancelUpdate">
            <summary>
                <para>Re-enables control updates after the <see cref="M:DevExpress.Utils.Controls.BaseOptions.BeginUpdate"/> method call without causing immediate repainting of the control.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.EndUpdate">
            <summary>
                <para>Re-enables control updates after the <see cref="M:DevExpress.Utils.Controls.BaseOptions.BeginUpdate"/> method call and forces an immediate update.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.Reset">
            <summary>
                <para>Resets all options to their default values.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.ToString">
            <summary>
                <para>Returns a string representing the currently enabled options.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value representing the currently enabled options. "" (String.Empty) if no option is enabled.
</returns>

        </member>
        <member name="T:DevExpress.XtraPrinting.IBasePrintable.IBasePrintable">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.IBasePrintable.CreateArea(System.String,DevExpress.XtraPrinting.IBrickGraphics)">
            <summary>
                <para>When implemented by a class, creates report elements (bricks) for a specific area.
</para>
            </summary>
            <param name="areaName">
		The name of the report area (section) for which elements should be created.

            </param>
            <param name="graph">
		An object implementing the <see cref="T:DevExpress.XtraPrinting.IBrickGraphics"/> interface which is a graphical surface on which report elements are to be drawn.

            </param>

        </member>
        <member name="M:DevExpress.XtraPrinting.IBasePrintable.Initialize(DevExpress.XtraPrinting.IPrintingSystem,DevExpress.XtraPrinting.ILink)">
            <summary>
                <para>When implemented by a class, initializes a control for report creation.
</para>
            </summary>
            <param name="ps">
		An object implementing the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface used to print a control.

            </param>
            <param name="link">
		An object implementing the <see cref="T:DevExpress.XtraPrinting.ILink"/> interface which refers to a control.

            </param>

        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ToolTipControllerCalcSizeEventArgs">
            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Utils.ToolTipController.CalcSize"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.#ctor(System.Windows.Forms.Control,System.Object,System.String,System.Drawing.Size,System.Drawing.Point)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs"/> class.
</para>
            </summary>
            <param name="control">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>
            <param name="toolTip">
		The string to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ToolTip"/> property.

            </param>
            <param name="size">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Size"/> property.

            </param>
            <param name="position">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Position"/> property.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.#ctor(System.Windows.Forms.Control,System.Object,System.String)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs"/> class.
</para>
            </summary>
            <param name="control">
		The <see cref="T:System.Windows.Forms.Control"/> object, specifying the control to which fires the event.

            </param>
            <param name="obj">
		The <see cref="T:System.Object"/> object, specifying the object to which fires the event.

            </param>
            <param name="toolTip">
		The property name to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ToolTip"/> object.

            </param>

        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Position">
            <summary>
                <para>Gets or sets the coordinates of the top left tooltip corner.
</para>
            </summary>
            <value>The <see cref="T:System.Drawing.Point"/> object specifying the coordinates of the top left tooltip corner relative to the desktop.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Size">
            <summary>
                <para>Gets or sets the tooltip dimensions.
</para>
            </summary>
            <value>The <see cref="T:System.Drawing.Size"/> object specifying the width and height of a tooltip rectangle. 
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ToolTip">
            <summary>
                <para>Gets the text to be displayed within the tooltip.
</para>
            </summary>
            <value>The <see cref="T:System.String"/> object specifying the text to be displayed within the tooltip.
</value>

        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerBeforeShowEventHandler.ToolTipControllerBeforeShowEventHandler">
            <summary>
                <para> [To be supplied] </para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerBeforeShowEventHandler.Invoke(System.Object,DevExpress.Utils.ToolTipControllerShowEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.BeforeShow"/> event.
</para>
            </summary>
            <param name="sender">
		The event source. This identifies the <see cref="T:DevExpress.Utils.ToolTipController"/> component which fires the event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object containing data related to the event.

            </param>

        </member>
        <member name="T:DevExpress.Utils.ToolTipController.ToolTipController">
            <summary>
                <para>Provides tooltip appearance and behavior options for controls.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.#ctor">
            <summary>
                <para>Creates a new instance of the <see cref="T:DevExpress.Utils.ToolTipController"/> class.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.ToolTipController.Active">
            <summary>
                <para>Gets or sets whether the component's functionality is enabled.
</para>
            </summary>
            <value><b>true</b> if displaying tooltips is allowed; otherwise, <b>false</b>.
</value>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.AddClientControl(System.Windows.Forms.Control)">
            <summary>
                <para>Enables the display of tooltips for the specified control implementing the <b>DevExpress.Utils.IToolTipControlClient</b> interface.
</para>
            </summary>
            <param name="control">
		The control, implementing the <b>DevExpress.Utils.IToolTipControlClient</b> interface, for which tooltips should be enabled.

            </param>

        </member>
        <member name="P:DevExpress.Utils.ToolTipController.AutoPopDelay">
            <summary>
                <para>Gets or sets the tooltip delay in milliseconds.
</para>
            </summary>
            <value>Integer value specifying tooltip delay.
</value>

        </member>
        <member name="E:DevExpress.Utils.ToolTipController.BeforeShow">
            <summary>
                <para>Enables you to customize the text and settings of the tooltip before displaying it onscreen.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.Utils.ToolTipController.CalcSize">
            <summary>
                <para>Enables you to specify the position  and size of the tooltip window.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.CreateShowArgs">
            <summary>
                <para>Returns a <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object containing settings of  the current tooltip controller.
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object with settings of the current tooltip controller.
</returns>

        </member>
        <member name="P:DevExpress.Utils.ToolTipController.DefaultController">
            <summary>
                <para>Gets the default <see cref="T:DevExpress.Utils.ToolTipController"/> used for displaying tooltips.
</para>
            </summary>
            <value>A default <see cref="T:DevExpress.Utils.ToolTipController"/> object.
</value>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.GetToolTip(System.Windows.Forms.Control)">
            <summary>
                <para>Gets the tooltip for the specified control.
</para>
            </summary>
            <param name="control">
		The control whose tooltip should be obtained.

            </param>
            <returns>The string representing the tooltip for the control.
</returns>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.HideHint">
            <summary>
                <para>Hides the hint if it is being displayed.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.ToolTipController.IconSize">
            <summary>
                <para>Gets or sets tooltip icon size.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.ToolTipIconSize"/> enumerator.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipController.IconType">
            <summary>
                <para>Gets or sets tooltip icon type.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.ToolTipIconType"/> enumerator.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ImageIndex">
            <summary>
                <para>Gets or sets the image which is displayed within the tooltip.
</para>
            </summary>
            <value>The integer value specifying the displayed image.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ImageList">
            <summary>
                <para>Gets or sets tooltip images and their settings.
</para>
            </summary>
            <value>The <see cref="T:System.Windows.Forms.ImageList"/> object.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipController.InitialDelay">
            <summary>
                <para>Gets or sets the initial tooltip delay in milliseconds.
</para>
            </summary>
            <value>Integer value, specifying initial tooltip delay.
</value>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.RemoveClientControl(System.Windows.Forms.Control)">
            <summary>
                <para>Disables displaying tooltips for the specified control implementing the <b>DevExpress.Utils.IToolTipControlClient</b> interface.
</para>
            </summary>
            <param name="control">
		The control, implementing the <b>DevExpress.Utils.IToolTipControlClient</b> interface, for which the <see cref="T:DevExpress.Utils.ToolTipController"/>'s functionality should be disabled.

            </param>

        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ReshowDelay">
            <summary>
                <para>Gets or sets the time interval that must pass before another hint is displayed if another hint is currently visible.
</para>
            </summary>
            <value>An integer value specifying the time interval in milliseconds.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipController.Rounded">
            <summary>
                <para>Gets or sets whether the tooltip's corners are rounded.
</para>
            </summary>
            <value><b>true</b> to display hints with rounded corners; otherwise, <b>false</b>.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipController.RoundRadius">
            <summary>
                <para>Gets or sets the radius of the rounded corners of the tooltip window.
</para>
            </summary>
            <value>The radius of the rounded corners.
</value>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.SetToolTip(System.Windows.Forms.Control,System.String)">
            <summary>
                <para>Sets the tooltip for the specified control.
</para>
            </summary>
            <param name="control">
		The control for which to set the tooltip.

            </param>
            <param name="value">
		The string representing the tooltip.

            </param>

        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ShowBeak">
            <summary>
                <para>Tests whether callout beaks are displayed for hints.
</para>
            </summary>
            <value><b>true</b> if the callout beak is displayed when a hint appears; otherwise, <b>false</b>.
</value>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(DevExpress.Utils.ToolTipControllerShowEventArgs,System.Windows.Forms.Control)">
            <summary>
                <para>Displays a hint for a control using specified settings.
</para>
            </summary>
            <param name="eShow">
		A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object specifying the settings used to display tooltips.

            </param>
            <param name="control">
		The control for which to display the tooltip.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,System.Windows.Forms.Control,DevExpress.Utils.ToolTipLocation)">
            <summary>
                <para>Displays a hint relative to a specific control.
</para>
            </summary>
            <param name="toolTip">
		The text to display as a tooltip.

            </param>
            <param name="control">
		The control for which to display the tooltip.

            </param>
            <param name="toolTipLocation">
		The position relative to the specified control at which the tooltip should be displayed.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String)">
            <summary>
                <para>Displays a hint relative to the mouse cursor using current <see cref="T:DevExpress.Utils.ToolTipController"/> settings.
</para>
            </summary>
            <param name="toolTip">
		The text to display as a tooltip.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,DevExpress.Utils.ToolTipLocation)">
            <summary>
                <para>Displays a hint at the specified position relative to the mouse cursor.
</para>
            </summary>
            <param name="toolTip">
		The text to display as a tooltip.

            </param>
            <param name="toolTipLocation">
		The position relative to the mouse cursor at which the hint should be displayed.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,System.Drawing.Point)">
            <summary>
                <para>Displays a hint relative to the specified point using current <see cref="T:DevExpress.Utils.ToolTipController"/> settings

</para>
            </summary>
            <param name="toolTip">
		The text to display as a tooltip.

            </param>
            <param name="cursorPosition">
		The point relative to which the tooltip should be displayed.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(System.String,DevExpress.Utils.ToolTipLocation,System.Drawing.Point)">
            <summary>
                <para>Displays a hint at a specified position relative to a specific point.
</para>
            </summary>
            <param name="toolTip">
		The text to display as a tooltip.

            </param>
            <param name="toolTipLocation">
		The position relative to the specified point at which the hint should be displayed.

            </param>
            <param name="cursorPosition">
		The point relative to which the hint should be displayed.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(DevExpress.Utils.ToolTipControllerShowEventArgs,System.Drawing.Point)">
            <summary>
                <para>Displays a hint relative to a specific point using specified settings.
</para>
            </summary>
            <param name="eShow">
		A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object specifying settings for displaying tooltips.


            </param>
            <param name="cursorPosition">
		A point relative to which the hint should be displayed.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(DevExpress.Utils.ToolTipControllerShowEventArgs)">
            <summary>
                <para>Displays a hint relative to the mouse cursor using specified settings.
</para>
            </summary>
            <param name="eShow">
		A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object specifying settings for displaying tooltips.

            </param>

        </member>
        <member name="P:DevExpress.Utils.ToolTipController.Style">
            <summary>
                <para>Gets or sets the tooltip style.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.ViewStyle"/> object specifying the style settings for tooltips.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ToolTipLocation">
            <summary>
                <para>Gets or sets the tooltip location.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.ToolTipLocation"/> enumerator.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipController.UseWindowStyle">
            <summary>
                <para>Gets or sets whether the default style should be used for the hint.
</para>
            </summary>
            <value><b>true</b> if the default style is applied to the hint; <b>false</b> if the <see cref="P:DevExpress.Utils.ToolTipController.Style"/> is used
</value>

        </member>
        <member name="T:DevExpress.LookAndFeel.DefaultLookAndFeel.DefaultLookAndFeel">
            <summary>
                <para>A component providing access to default LookAndFeel settings.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.LookAndFeel.DefaultLookAndFeel.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.LookAndFeel.DefaultLookAndFeel"/> object.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.LookAndFeel.DefaultLookAndFeel.LookAndFeel">
            <summary>
                <para>Gets or sets the <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object defining default LookAndFeel settings.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object defining default LookAndFeel settings.
</value>

        </member>
        <member name="T:DevExpress.Utils.KeyShortcut.KeyShortcut">
            <summary>
                <para>A class used by various controls to provide shortcut keys.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.#ctor(System.Windows.Forms.Shortcut)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.KeyShortcut"/> class with the specified shortcut.
</para>
            </summary>
            <param name="shortcut">
		The key combination to initialize the <see cref="P:DevExpress.Utils.KeyShortcut.Key"/> property.

            </param>

        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.#ctor(System.Windows.Forms.Keys)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.KeyShortcut"/> class with the specified shortcut.
</para>
            </summary>
            <param name="key">
		The key combination to initialize the <see cref="P:DevExpress.Utils.KeyShortcut.Key"/> property. Values of the <see cref="T:System.Windows.Forms.Keys"/> type can be combined using the OR operator.

            </param>

        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.KeyShortcut"/> class and sets the shortcut to the <see cref="F:System.Windows.Forms.Keys.None"/> value.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.KeyShortcut.Empty">
            <summary>
                <para>Gets the static <see cref="T:DevExpress.Utils.KeyShortcut"/> object whose <see cref="P:DevExpress.Utils.KeyShortcut.Key"/> property is set to <see cref="F:System.Windows.Forms.Keys.None"/>. 

</para>
            </summary>
            <returns>The static <see cref="T:DevExpress.Utils.KeyShortcut"/> object with no valid shortcut assigned.
</returns>

        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.Equals(System.Object)">
            <summary>
                <para>Tests whether the shortcuts of the current and specified <see cref="T:DevExpress.Utils.KeyShortcut"/> objects are identical.
</para>
            </summary>
            <param name="value">
		The object representing the <see cref="T:DevExpress.Utils.KeyShortcut"/> object.

            </param>
            <returns><b>true</b> if the function parameter represents a <see cref="T:DevExpress.Utils.KeyShortcut"/> object and its shortcut is equal to the shortcut of the current object; otherwise, <b>false</b>.
</returns>

        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current object.
</para>
            </summary>
            <returns>The hash code for the current object.
</returns>

        </member>
        <member name="P:DevExpress.Utils.KeyShortcut.IsExist">
            <summary>
                <para>Tests whether the current shortcut specifies a valid key combination.
</para>
            </summary>
            <value><b>true</b> if the current shortcut specifies a valid key combination; otherwise, <b>false</b>.
</value>

        </member>
        <member name="P:DevExpress.Utils.KeyShortcut.Key">
            <summary>
                <para>Gets the shortcut used to activate particular functionality.
</para>
            </summary>
            <value>The <see cref="T:System.Windows.Forms.Keys"/> value representing the shortcut.
</value>

        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.ToString">
            <summary>
                <para>Gets the text representation of the current shortcut.
</para>
            </summary>
            <returns>The text representation of the current shortcut.
</returns>

        </member>
        <member name="T:DevExpress.Utils.FormatInfo.FormatInfo">
            <summary>
                <para>Provides formatting settings.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.FormatInfo.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.FormatInfo"/> class.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.FormatInfo.AlwaysUseThreadFormat">
            <summary>
                <para>Gets or sets whether a value for the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property should be determined each time the property is accessed.
</para>
            </summary>
            <value><b>true</b> if the value for the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property should be determined each time the property is accessed.
</value>

        </member>
        <member name="M:DevExpress.Utils.FormatInfo.Assign(DevExpress.Utils.FormatInfo)">
            <summary>
                <para>Copies properties of the specified <see cref="T:DevExpress.Utils.FormatInfo"/> object to the current object.
</para>
            </summary>
            <param name="info">
		The <see cref="T:DevExpress.Utils.FormatInfo"/> object whose properties must be copied.

            </param>

        </member>
        <member name="E:DevExpress.Utils.FormatInfo.Changed">
            <summary>
                <para>Occurs on changing properties of the current <see cref="T:DevExpress.Utils.FormatInfo"/> class object.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.FormatInfo.Empty">
            <summary>
                <para>Gets a <see cref="T:DevExpress.Utils.FormatInfo"/> object with default settings.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.FormatInfo"/> object with default property values.
</value>

        </member>
        <member name="P:DevExpress.Utils.FormatInfo.Format">
            <summary>
                <para>Gets or sets the <see cref="T:System.IFormatProvider"/> object which specifies how values should be formatted.
</para>
            </summary>
            <value>The <b>IFormatProvider</b> object which specifies how values should be formatted.
</value>

        </member>
        <member name="P:DevExpress.Utils.FormatInfo.FormatString">
            <summary>
                <para>Gets the pattern for formatting values.
</para>
            </summary>
            <value>The string representing the format pattern.
</value>

        </member>
        <member name="P:DevExpress.Utils.FormatInfo.FormatType">
            <summary>
                <para>Gets or sets the type of formatting specified by the current <see cref="T:DevExpress.Utils.FormatInfo"/> object.
</para>
            </summary>
            <value>One of <see cref="T:DevExpress.Utils.FormatType"/> values specifying the formatting type.
</value>

        </member>
        <member name="M:DevExpress.Utils.FormatInfo.GetDisplayText(System.Object)">
            <summary>
                <para>Gets the value formatted according to the format pattern and using the format provider settings.
</para>
            </summary>
            <param name="val">
		The value to format.

            </param>
            <returns>The text representation of the specified value according to settings of the current <see cref="T:DevExpress.Utils.FormatInfo"/> object.
</returns>

        </member>
        <member name="P:DevExpress.Utils.FormatInfo.IsEmpty">
            <summary>
                <para>Tests whether properties of the current object are set to default values.
</para>
            </summary>
            <value><b>true</b> if the object properties are set to default values; otherwise,<b>false</b>.
</value>

        </member>
        <member name="M:DevExpress.Utils.FormatInfo.IsEquals(DevExpress.Utils.FormatInfo)">
            <summary>
                <para>Compares properties of the current object with settings of the specified <see cref="T:DevExpress.Utils.FormatInfo"/> object.
</para>
            </summary>
            <param name="info">
		The <see cref="T:DevExpress.Utils.FormatInfo"/> object whose properties are compared.

            </param>
            <returns><b>true</b> if properties of the current object equal to corresponding properties of the <i>info</i> parameter.
</returns>

        </member>
        <member name="M:DevExpress.Utils.FormatInfo.LockParse">
            <summary>
                <para>The method supports the internal .NET infrastructure and you must not call it from your code.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.FormatInfo.Parse">
            <summary>
                <para>Performs actions when the <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> property changes.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.FormatInfo.Reset">
            <summary>
                <para>Reverts properties of the current object to default values.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.FormatInfo.ShouldSerialize">
            <summary>
                <para>Tests whether the <see cref="T:DevExpress.Utils.FormatInfo"/> object should be persisted.
</para>
            </summary>
            <returns><b>true</b> if the object should be persisted; otherwise, <b>false</b>.
</returns>

        </member>
        <member name="M:DevExpress.Utils.FormatInfo.UnlockParse">
            <summary>
                <para>The method supports the internal .NET infrastructure and you must not call it from your code.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Utils.XPThemeSupport.XPThemeSupport">
            <summary>
                <para>Contains values specifying whether bound controls is drawn using XP style.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.XPThemeSupport.Default">
            <summary>
                <para>If bound control can display or edit data using inplace editors, latter are painted in the same style as its container. Otherwise it is drawn in XP style, if it is supported by a user's system.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.XPThemeSupport.Disabled">
            <summary>
                <para>An editor is drawn in Windows Classic style.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.XPThemeSupport.Enabled">
            <summary>
                <para>An editor is drawn in XP style if it is supported by user's system.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.LookAndFeel.UserLookAndFeel.UserLookAndFeel">
            <summary>
                <para>Represents look and feel settings for controls provided by Developer Express.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> class.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveLookAndFeel">
            <summary>
                <para>Gets the actual <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object currently applied.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object currently applied.
</value>

        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveStyle">
            <summary>
                <para>Gets or sets the style currently applied.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.ActiveLookAndFeelStyle"/> value specifying the currently applied style.
</value>

        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.Assign(DevExpress.LookAndFeel.UserLookAndFeel)">
            <summary>
                <para>Copies properties of the specified <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object to the current object.
</para>
            </summary>
            <param name="source">
		The source <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.

            </param>

        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.Default">
            <summary>
                <para>Gets the default LookAndFeel object which should be used for painting controls when the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel"/> property is set to <b>true</b>.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object referring to the default LookAndFeel object.
</value>

        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.Dispose">
            <summary>
                <para>Releases all resources used by the current object.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.IsEquals(DevExpress.LookAndFeel.UserLookAndFeel)">
            <summary>
                <para>Tests whether two objects have the same property values.
</para>
            </summary>
            <param name="source">
		The <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object to which the current object is compared.

            </param>
            <returns><b>true</b> if the current object has the same property values as the specified object; otherwise, <b>false</b>.
</returns>

        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.Painter">
            <summary>
                <para>Gets the painter based on the style currently applied for drawing control's elements.
</para>
            </summary>
            <value>A <b>BaseLookAndFeelPainters</b> class descendant specifying the painter corresponding to the current style which is defined by <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveStyle"/>.
</value>

        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ParentLookAndFeel">
            <summary>
                <para>Gets or sets the parent LookAndFeel.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object specifying the parent LookAndFeel; <b>null</b> if the parent LookAndFeel is not assigned.
</value>

        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.ShouldSerialize">
            <summary>
                <para>Tests whether the <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object should be persisted.
</para>
            </summary>
            <returns><b>true</b> if the object should be persisted; otherwise, <b>false</b>.
</returns>

        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.Style">
            <summary>
                <para>Gets or sets the style of the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.
</para>
            </summary>
            <value>The style of the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.
</value>

        </member>
        <member name="E:DevExpress.LookAndFeel.UserLookAndFeel.StyleChanged">
            <summary>
                <para>Occurs on changing properties of the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object or the parent LookAndFeel specified by the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.ParentLookAndFeel"/> member.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel">
            <summary>
                <para>Gets or sets whether the current object's settings are in effect.
</para>
            </summary>
            <value><b>true</b> to use look and feel settings provided by the parent object or default look and feel object; <b>false</b> to enable this object's settings.
</value>

        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.UseWindowsXPTheme">
            <summary>
                <para>Gets or sets whether controls should be painted using the XP theme.
</para>
            </summary>
            <value><b>true</b> if controls should be painted using the XP theme; otherwise, <b>false</b>.
</value>

        </member>
        <member name="T:DevExpress.LookAndFeel.LookAndFeelStyle.LookAndFeelStyle">
            <summary>
                <para>Enumerates values for the 
<see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.Style"/> property.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.Flat">
            <summary>
                <para>Control borders are flat. The following screenshot shows the <b>Flat</b> style applied to a button edit control.
<para>

</para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.Style3D">
            <summary>
                <para>Control borders are three-dimensional. The following screenshot shows the <b>Style3D</b> style applied to a button edit control.
<para>

</para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.UltraFlat">
            <summary>
                <para>Borders have an Office XP style. Borders and the client area are highlighted when the mouse pointer is positioned over them or they are focused. 
The following screenshot shows the <b>UltraFlat</b> style applied to a button edit control.
<para>

</para>
<para>

</para>
</para>
            </summary>

        </member>
        <member name="T:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.ActiveLookAndFeelStyle">
            <summary>
                <para>Enumerates values for the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveStyle"/> property.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.Flat">
            <summary>
                <para>Control borders are flat. The following screenshot shows the <b>Flat</b> style applied to a button edit control.
<para>

</para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.Style3D">
            <summary>
                <para>Control borders are three-dimensional. The following screenshot shows the <b>Style3D</b> style applied to a button edit control.
<para>

</para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.UltraFlat">
            <summary>
                <para>Borders have an Office XP style. Borders and the client area are highlighted when the mouse pointer is positioned over them or they are focused. 
The following screenshot shows the <b>UltraFlat</b> style applied to a button edit control.
<para>

</para>
<para>

</para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.WindowsXP">
            <summary>
                <para>Control elements are painted using the XP theme.  The following screenshot shows the <b>WindowsXP</b> style applied to a button edit control.
<para>

</para>
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Utils.Controls.BaseOptionChangedEventHandler.BaseOptionChangedEventHandler">
            <summary>
                <para>Represents a method that will handle the event raised after an option value change.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptionChangedEventHandler.Invoke(System.Object,DevExpress.Utils.Controls.BaseOptionChangedEventArgs)">
            <summary>
                <para>Represents a method that will handle the event raised after the option has been changed.
</para>
            </summary>
            <param name="sender">
		The event sender.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.Controls.BaseOptionChangedEventArgs"/> object that contains data related to the event.

            </param>

        </member>
        <member name="T:DevExpress.Utils.HideException.HideException">
            <summary>
                <para>Prevents default actions when handling specific events. 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.HideException.#ctor">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.Utils.HideException"/> class instance.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Utils.ToolTipLocation.ToolTipLocation">
            <summary>
                <para>Specifies the location where a tooltip is displayed in relation to the mouse cursor position.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.BottomCenter">
            <summary>
                <para>A tooltip appears vertically aligned at the bottom, and horizontally centered relative to the mouse cursor position.
<para></para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.BottomLeft">
            <summary>
                <para>A tooltip appears vertically aligned at the bottom, and horizontally aligned on the left relative to the mouse cursor position.
<para></para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.BottomRight">
            <summary>
                <para>A tooltip appears vertically aligned at the bottom, and horizontally aligned on the right relative to the mouse cursor position.
<para></para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.LeftBottom">
            <summary>
                <para>A tooltip appears horizontally aligned on the left, and vertically aligned at the bottom relative to the mouse cursor position.
<para></para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.LeftCenter">
            <summary>
                <para>A tooltip appears horizontally aligned on the left, and vertically centered relative to the mouse cursor position.
<para></para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.LeftTop">
            <summary>
                <para>A tooltip appears horizontally aligned on the left, and vertically aligned at the top relative to the mouse cursor position.
<para></para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.RightBottom">
            <summary>
                <para>A tooltip appears horizontally aligned on the right, and vertically aligned at the bottom relative to the mouse cursor position.
<para></para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.RightCenter">
            <summary>
                <para>A tooltip appears horizontally aligned on the right, and vertically centered relative to the mouse cursor position.
<para></para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.RightTop">
            <summary>
                <para>A tooltip appears horizontally aligned on the right, and vertically aligned at the top relative to the mouse cursor position.
<para></para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.TopCenter">
            <summary>
                <para>A tooltip appears vertically aligned at the top, and horizontally centered relative to the mouse cursor position.
<para></para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.TopLeft">
            <summary>
                <para>A tooltip appears vertically aligned at the top, and horizontally aligned on the left relative to the mouse cursor position.
<para></para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.TopRight">
            <summary>
                <para>A tooltip appears vertically aligned at the top, and horizontally aligned on the right relative to the mouse cursor position.
<para></para>
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Utils.ToolTipIconType.ToolTipIconType">
            <summary>
                <para>Lists values specifying icon types to be displayed within tooltips.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Application">
            <summary>
                <para>A tooltip contains the default application icon.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Asterics">
            <summary>
                <para>A tooltip contains the system asterisk icon.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Error">
            <summary>
                <para>A tooltip contains the system error icon.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Exclamation">
            <summary>
                <para>A tooltip contains the system exclamation icon.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Hand">
            <summary>
                <para>A tooltip contains the system hand icon.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Information">
            <summary>
                <para>A tooltip contains the system information icon.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.None">
            <summary>
                <para>A tooltip contains no predefined icon.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Question">
            <summary>
                <para>A tooltip contains the system question icon.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Warning">
            <summary>
                <para>A tooltip contains the system warning icon.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.WindLogo">
            <summary>
                <para>A tooltip contains the Windows logo icon.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Utils.ToolTipIconSize.ToolTipIconSize">
            <summary>
                <para>Specifies the size of a predefined icon displayed within a tooltip.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipIconSize.Large">
            <summary>
                <para>An icon displayed within a tooltip is large. The icon type can be selected via the <see cref="P:DevExpress.Utils.ToolTipController.IconType"/> property or can be specified in a handler of the <see cref="E:DevExpress.Utils.ToolTipController.BeforeShow"/> event via <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconType"/> property.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipIconSize.Small">
            <summary>
                <para>An icon displayed within a tooltip is small. The icon type can be selected via the <see cref="P:DevExpress.Utils.ToolTipController.IconType"/> property or can be specified in a handler of the <see cref="E:DevExpress.Utils.ToolTipController.BeforeShow"/> event via <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconType"/> property.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Utils.ViewStyleGetDefaultHorzAlignment.ViewStyleGetDefaultHorzAlignment">
            <summary>
                <para> [To be supplied] </para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleGetDefaultHorzAlignment.Invoke(System.Object,DevExpress.Utils.HorzAlignment@)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ViewStyle.GetDefaultHorzAlignment"/> event.
</para>
            </summary>
            <param name="sender">
		An object representing the source of the event.

            </param>
            <param name="align">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> object that contains event data.

            </param>

        </member>
        <member name="T:DevExpress.XtraPrinting.BrickStringFormat.BrickStringFormat">
            <summary>
                <para>Encapsulates text layout information (such as alignment and line spacing), display manipulations (such as ellipsis insertion and national digit substitution).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringFormatFlags,System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class instance .
</para>
            </summary>
            <param name="options">
		A <B>StringFormatFlags</B> enumeration value containing formatting information.

            </param>
            <param name="aligment">
		A <B>StringAlignment</B> enumeration value, representing text alignment settings.

            </param>
            <param name="lineAligment">
		A <B>StringAlignment</B> enumeration value, representing line alignment settings.

            </param>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class instance .
</para>
            </summary>
            <param name="aligment">
		A <B>StringAlignment</B> enumeration value representing text alignment settings.

            </param>
            <param name="lineAligment">
		A <B>StringAlignment</B> enumeration value representing line alignment settings.

            </param>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringAlignment)">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class instance .
</para>
            </summary>
            <param name="aligment">
		A <B>StringAlignment</B> enumeration value representing text alignment settings.

            </param>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringFormatFlags)">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object with a specific <B>StringFormatFlags</B> enumeration.
</para>
            </summary>
            <param name="options">
		A <B>StringFormatFlags</B> enumeration for a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object. 

            </param>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringFormat)">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object from an existing <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>
            <param name="sf">
		A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object from which to initialize a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object. 

            </param>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment">
            <summary>
                <para>Gets or sets text alignment information.
</para>
            </summary>
            <value>A <B>StringAlignment</B> enumeration value that specifies text alignment information.
</value>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.ChangeAlignment(System.Drawing.StringAlignment)">
            <summary>
                <para>Returns a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object cloned from the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>
            <param name="alignment">
		A <B>StringAlignment</B> enumeration value, representing text alignment.

            </param>
            <returns>A cloned <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</returns>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.ChangeFormatFlags(System.Drawing.StringFormatFlags)">
            <summary>
                <para>Returns a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object cloned from the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>
            <param name="options">
		A <B>StringFormatFlags</B> enumeration value containing formatting information.

            </param>
            <returns>A cloned <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</returns>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.ChangeLineAlignment(System.Drawing.StringAlignment)">
            <summary>
                <para>Returns a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object cloned from the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>
            <param name="lineAlignment">
		A <B>StringAlignment</B> enumeration value representing line alignment.

            </param>
            <returns>A cloned <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</returns>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Clone">
            <summary>
                <para>Creates an exact copy of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object created by this method.
</returns>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Equals(System.Object)">
            <summary>
                <para>Determines whether a specific <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance equals the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance.
</para>
            </summary>
            <param name="obj">
		A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance against which to compare with the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance.

            </param>
            <returns><B>true</B> if a specific <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance equals the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance; otherwise, <B>false</B>.
</returns>

        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.FormatFlags">
            <summary>
                <para>Gets or sets a <B>StringFormatFlags</B> enumeration that contains formatting information.
</para>
            </summary>
            <value>A <B>StringFormatFlags</B> enumeration that contains formatting information.
</value>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.GetHashCode">
            <summary>
                <para>Serves as a hash function suitable for use in hashing algorithms and data structures like a hash table.
</para>
            </summary>
            <returns>Hash code for the current <B>Object</B>.
</returns>

        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.LineAlignment">
            <summary>
                <para>Gets or sets line alignment.
</para>
            </summary>
            <value>A <B>StringAlignment</B> enumeration value that represents line alignment information.
</value>

        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.Value">
            <summary>
                <para>Gets the <B>StringFormat</B> instance representing current text formatting.
</para>
            </summary>
            <value>Current text formatting.
</value>

        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerEventArgsBase.ToolTipControllerEventArgsBase">
            <summary>
                <para>The base class for classes providing data for <see cref="T:DevExpress.Utils.ToolTipController"/>'s events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerEventArgsBase.#ctor(System.Windows.Forms.Control,System.Object)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerEventArgsBase"/> class.
</para>
            </summary>
            <param name="control">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerEventArgsBase.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerEventArgsBase"/> class.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl">
            <summary>
                <para>Gets or sets the control for which a tooltip controller's event is fired.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Control"/> object for which the event is fired.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject">
            <summary>
                <para>Gets or sets the element of the control for which the tooltip should be displayed.
</para>
            </summary>
            <value>An object defining the element for which to display the tooltip.
</value>

        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerCalcSizeEventHandler.ToolTipControllerCalcSizeEventHandler">
            <summary>
                <para> [To be supplied] </para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerCalcSizeEventHandler.Invoke(System.Object,DevExpress.Utils.ToolTipControllerCalcSizeEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.CalcSize"/> event.
</para>
            </summary>
            <param name="sender">
		The event source. This identifies the <see cref="T:DevExpress.Utils.ToolTipController"/> component which fires the event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs"/> object containing data related to the event.

            </param>

        </member>
        <member name="T:DevExpress.XtraPrinting.IPrintable.IPrintable">
            <summary>
                <para>Defines methods that enable different controls to be printed using the <b>XtraPrinting Library</b>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintable.AcceptChanges">
            <summary>
                <para>Applies all changes made by the <b>Property editor</b> when implemented by a class.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintable.HasPropertyEditor">
            <summary>
                <para>Determines whether the class provides the <b>Property editor</b> form.
</para>
            </summary>
            <returns><b>true</b>, if the class provides the <b>Property editor</b>; otherwise, <b>false</b>.
</returns>

        </member>
        <member name="P:DevExpress.XtraPrinting.IPrintable.PropertyEditorControl">
            <summary>
                <para>Returns a form which allows a user to set printing properties when implemented by a class.
</para>
            </summary>
            <value>The <b>Property editor</b> form that allows customizing printing properties of a control.
</value>

        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintable.RejectChanges">
            <summary>
                <para>Cancels changes made by a user in the <b>Property editor</b> when implemented by a class.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintable.ShowHelp">
            <summary>
                <para>Invokes the help system for the <b>Property editor</b> when implemented by a class .
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintable.SupportsHelp">
            <summary>
                <para>Determines whether the help system is available for the <b>Property editor</b> when implemented by a class .
</para>
            </summary>
            <returns><b>true</b> if the help system is available for the <b>Property editor</b>; otherwise, <b>false</b>.
</returns>

        </member>
        <member name="T:DevExpress.Utils.FormatType.FormatType">
            <summary>
                <para>Enumerates values for the <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> property.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.FormatType.Custom">
            <summary>
                <para>Specifies that you assign a custom <see cref="T:System.IFormatProvider"/> to the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property.  Setting <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> to <b>Custom</b> does not change the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> and <see cref="P:DevExpress.Utils.FormatInfo.FormatString"/> property values.

<para>
If you wish to use your own <see cref="T:System.IFormatProvider"/> to format values, set the <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> property to <b>Custom</b> and  the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property to the required format provider.
</para>

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.FormatType.DateTime">
            <summary>
                <para>Specifies that values should be formatted as the <see cref="T:System.DateTime"/> type.
<para>
Setting <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> to <b>DateTime</b> assigns the static <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo"/> format provider to the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property. This defines the format provider for the current culture.
Also <see cref="P:DevExpress.Utils.FormatInfo.FormatString"/> is set to "d" (short date pattern).
</para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.FormatType.None">
            <summary>
                <para>No formatting is performed.
<para>
Setting the <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> property to <b>None</b> clears the <see cref="P:DevExpress.Utils.FormatInfo.FormatString"/> property and sets the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> object to <b>null</b>.
</para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.FormatType.Numeric">
            <summary>
                <para>Specifies that values should be formatted as numbers.
<para>
Setting <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> to <b>Numeric</b> assigns the static <b>System.Globalization.NumberFormatInfo.CurrentInfo</b> format provider to the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property. This defines the format provider for the current culture.

Also <see cref="P:DevExpress.Utils.FormatInfo.FormatString"/> is set to an empty string.
</para>
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Utils.Drawing.GraphicsCache.GraphicsCache">
            <summary>
                <para>Provides storage for pens, fonts and brushes used during painting.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(System.Windows.Forms.PaintEventArgs,DevExpress.Utils.Paint.XPaint)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.PaintEventArgs"/> object that contains data used for painting. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs"/> property.

            </param>
            <param name="paint">
		A <B>DevExpress.Utils.Paint.XPaint</B> object providing painting methods used in the <see cref="T:DevExpress.XtraNavBar.NavBarControl"/> control. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Paint"/> property.

            </param>

        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(System.Windows.Forms.PaintEventArgs)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.PaintEventArgs"/> object that contains data used to paint.

            </param>

        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(System.Drawing.Graphics)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class.
</para>
            </summary>
            <param name="g">
		The <see cref="T:System.Drawing.Graphics"/> object to initialize the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics"/> property.

            </param>

        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.Clip">
            <summary>
                <para>Gets the clipping region of the painted object.
</para>
            </summary>
            <value>A <B>DevExpress.Utils.Paint.Clipping</B> object specifying the clipping region of the painted object.
</value>

        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.Dispose">
            <summary>
                <para>Releases all resources used by this <see cref="T:DevExpress.Utils.GraphicsCache"/> object.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetFont(System.Drawing.Font,System.Drawing.FontStyle)">
            <summary>
                <para>Gets a font object with the specified settings.
</para>
            </summary>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object whose settings specify the desired font's typeface and size.

            </param>
            <param name="style">
		A bitwise combination of <see cref="T:System.Drawing.Font"/> enumeration values specifying the desired font style.

            </param>
            <returns>A <see cref="T:System.Drawing.Font"/> object representing a font with the specified settings.
</returns>

        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetGradientBrush(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
            <summary>
                <para>Returns a linear gradient brush with specified settings.
</para>
            </summary>
            <param name="rect">
		A <B>System.Drawing.Rectangle</B> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle. 

            </param>
            <param name="startColor">
		A <B>System.Drawing.Color</B> object that represents the starting color for the gradient. 

            </param>
            <param name="endColor">
		A <B>System.Drawing.Color</B> object that represents the ending color for the gradient. 

            </param>
            <param name="mode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the gradient orientation. 

            </param>
            <returns>A <B>System.Drawing.Brush</B> descendant representing the requested linear gradient brush (typically a <B>System.Drawing.Drawing2D.LinearGradientBrush</B> object).
</returns>

        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetGradientBrush(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode,System.Int32)">
            <summary>
                <para>Returns a linear gradient brush with the specified settings.
</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle. 

            </param>
            <param name="startColor">
		A <see cref="T:System.Drawing.Color"/> object that represents the starting color for the gradient. 

            </param>
            <param name="endColor">
		A <see cref="T:System.Drawing.Color"/> object that represents the ending color for the gradient. 

            </param>
            <param name="mode">
		A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode"/> enumeration value specifying the gradient's orientation. 

            </param>
            <param name="blendCount">
		An integer value specifying the number of blend patterns for the brush.

            </param>
            <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing the requested linear gradient brush (typically a <b>System.Drawing.Drawing2D.LinearGradientBrush</b> object).
</returns>

        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetGradientBrushCache(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode,System.Int32,System.Object)">
            <summary>
                <para>Returns a linear gradient brush with the specified key.
</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle. 

            </param>
            <param name="startColor">
		A <see cref="T:System.Drawing.Color"/> object that represents the starting color for the gradient. 

            </param>
            <param name="endColor">
		A <see cref="T:System.Drawing.Color"/> object that represents the ending color for the gradient. 

            </param>
            <param name="mode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the gradient's orientation. 

            </param>
            <param name="blendCount">
		An integer value specifying the number of blend patterns for the brush. 

            </param>
            <param name="hash">
		An object, specifying the key value.

            </param>
            <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing the requested linear gradient brush (typically a <B>System.Drawing.Drawing2D.LinearGradientBrush</B> object).
</returns>

        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetPen(System.Drawing.Color,System.Int32)">
            <summary>
                <para>Returns a pen with specified settings.
</para>
            </summary>
            <param name="color">
		A <B>System.Drawing.Color</B> object specifying the pen color.

            </param>
            <param name="width">
		An integer value specifying the pen width.

            </param>
            <returns>A <B>System.Drawing.Pen</B> object representing the requested pen.
</returns>

        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetPen(System.Drawing.Color)">
            <summary>
                <para>Returns the pixel-wide pen with a specified color.
</para>
            </summary>
            <param name="color">
		A <B>System.Drawing.Color</B> object specifying the pen color.

            </param>
            <returns>A <B>System.Drawing.Pen</B> object representing the requested pen.
</returns>

        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetSolidBrush(System.Drawing.Color)">
            <summary>
                <para>Gets a solid brush with specified parameters.
</para>
            </summary>
            <param name="color">
		A <B>System.Drawing.Color</B> object specifying the brush color.

            </param>
            <returns>A <B>System.Drawing.Brush</B> descendant representing the requested brush (typically a <B>System.Drawing.SolidBrush</B> object).
</returns>

        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics">
            <summary>
                <para>Gets an object that serves as the painting surface and provides painting facilities.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Graphics"/> object providing painting facilities.
</value>

        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.Paint">
            <summary>
                <para>Gets or sets a <b>DevExpress.Utils.Paint.XPaint</b> object.
</para>
            </summary>
            <value>A <b>DevExpress.Utils.Paint.XPaint</b> object.
</value>

        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs">
            <summary>
                <para>Gets or sets the <see cref="T:System.Windows.Forms.PaintEventArgs"/> object providing information for painting.
</para>
            </summary>
            <value>The <see cref="T:System.Windows.Forms.PaintEventArgs"/> object providing information for painting.
</value>

        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.ResourceCount">
            <summary>
                <para>Gets the number of elements in hash tables that store brushes and pens.
</para>
            </summary>
            <value>The number of elements in internal hash tables.
</value>

        </member>
        <member name="T:DevExpress.Utils.ViewStyleHashtable.ViewStyleHashtable">
            <summary>
                <para>Associates style names with style objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleHashtable"/> class.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.Add(System.String,System.String)">
            <summary>
                <para>Creates a style with a specified name and adds it to a hash table.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the style to add.

            </param>
            <param name="creator">
		A string value identifying the style creator.

            </param>
            <returns>The created and added <see cref="T:DevExpress.Utils.ViewStyle"/> object.
</returns>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.Add">
            <summary>
                <para>Adds a new style with default settings to a hash table.
</para>
            </summary>
            <returns>The added <see cref="T:DevExpress.Utils.ViewStyle"/> object.
</returns>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.Add(System.String,DevExpress.Utils.ViewStyle)">
            <summary>
                <para>Creates a style with the name specified and adds it to the <see cref="T:DevExpress.Utils.ViewStyleHashtable"/> hash table.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the style to add.

            </param>
            <param name="style">
		A <see cref="T:DevExpress.Utils.ViewStyle"/> object to add.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.AddReplace(System.String,System.Object)">
            <summary>
                <para>Adds a specified style to a hash table replacing the style with the same key (if any).
</para>
            </summary>
            <param name="key">
		An object specifying the key value corresponding to the added style (the style name).

            </param>
            <param name="value">
		An object representing the added style (typically a <see cref="T:DevExpress.Utils.ViewStyle"/> object or descendant).

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.Clear">
            <summary>
                <para>Removes all items from the hashtable.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.Utils.ViewStyleHashtable.CollectionChanged">
            <summary>
                <para>Fires immediately after the <see cref="T:DevExpress.Utils.ViewStyleHashtable"/> hashtable has changed.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.Contains(System.String)">
            <summary>
                <para>Determines whether the hashtable contains a specific style.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the <see cref="T:DevExpress.Utils.ViewStyle"/> object to locate in the collection.

            </param>
            <returns><b>true</b> if the hashtable contains an item with the specified key; otherwise, <b>false</b>.
</returns>

        </member>
        <member name="P:DevExpress.Utils.ViewStyleHashtable.Count">
            <summary>
                <para>Gets the number of key/value pairs contained in a hashtable.
</para>
            </summary>
            <value>The number of items in the hashtable.
</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.CreateStyle(System.String,System.String)">
            <summary>
                <para>Creates a style with the specified name without adding it to the hash table.
</para>
            </summary>
            <param name="styleName">
		A string specifying the name of the style to create.

            </param>
            <param name="creator">
		A string identifying the style creator.

            </param>
            <returns>The style which was created.
</returns>

        </member>
        <member name="E:DevExpress.Utils.ViewStyleHashtable.CreateViewStyle">
            <summary>
                <para>Fires when a style needs to be created and added to a hash table.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.Utils.ViewStyleHashtable.IsNeedSerializeStyle">
            <summary>
                <para>This member is not intended to be used directly from your code.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.ViewStyleHashtable.Item(System.String)">
            <summary>
                <para>Gets the style object specified by its name.
</para>
            </summary>
            <param name="styleName">
		A string value representing the name of the requested style.

            </param>
            <value>A <see cref="T:DevExpress.Utils.ViewStyle"/> object (or descendant) with the specified name.
</value>

        </member>
        <member name="P:DevExpress.Utils.ViewStyleHashtable.Keys">
            <summary>
                <para>Gets an <see cref="T:System.Collections.ICollection"/> object containing all the keys in the hashtable.
</para>
            </summary>
            <value>An <see cref="T:System.Collections.ICollection"/> containing all the keys in the hashtable.
</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.Remove(System.String)">
            <summary>
                <para>Removes the style with the specified name from the hash table.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the style to be removed.

            </param>

        </member>
        <member name="P:DevExpress.Utils.ViewStyleHashtable.Values">
            <summary>
                <para>Gets an <see cref="T:System.Collections.ICollection"/> object containing all the values in the hashtable.
</para>
            </summary>
            <value>An <see cref="T:System.Collections.ICollection"/> object containing all the values in the hashtable.
</value>

        </member>
        <member name="T:DevExpress.Utils.ViewStyles.ViewStyles">
            <summary>
                <para>Lists types of control elements and style names applied to them.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyles.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyles"/> class.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyles.Add(System.Object,System.Object)">
            <summary>
                <para>Adds a new "element name - style name" pair to the internal hashtable.
</para>
            </summary>
            <param name="key">
		The object identifying an element name.

            </param>
            <param name="val">
		The object identifying the name of a style to apply to the specified element

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyles.AddReplace(System.Object,System.Object)">
            <summary>
                <para>Adds a specified style name to a hash table replacing the style name with the same key (if any).
</para>
            </summary>
            <param name="key">
		An object specifying the key of the added value (a string representing the control's element name).

            </param>
            <param name="value">
		An object specifying the added value (a string representing the style name).

            </param>

        </member>
        <member name="E:DevExpress.Utils.ViewStyles.Changed">
            <summary>
                <para>Occurs when modifying the internal hashtable.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyles.Clear">
            <summary>
                <para>Removes all items from the hashtable.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyles.Clone">
            <summary>
                <para>Creates a copy of this <see cref="T:DevExpress.Utils.ViewStyles"/> object.
</para>
            </summary>
            <returns>An object representing the copy of this <see cref="T:DevExpress.Utils.ViewStyles"/> object.
</returns>

        </member>
        <member name="M:DevExpress.Utils.ViewStyles.Contains(System.Object)">
            <summary>
                <para>Determines whether the hashtable contains a specific key (element's name).
</para>
            </summary>
            <param name="key">
		The key (element's name) to locate in the hashtable. 

            </param>
            <returns><b>true</b> if the hashtable contains an item with the specified key; otherwise, <b>false</b>.
</returns>

        </member>
        <member name="M:DevExpress.Utils.ViewStyles.ContainsKey(System.Object)">
            <summary>
                <para>Determines whether the hashtable contains a specific key (element's name).
</para>
            </summary>
            <param name="key">
		The key (element's name) to locate in the hashtable.

            </param>
            <returns><b>true</b> if the hashtable contains an item with the specified key; otherwise, <b>false</b>.
</returns>

        </member>
        <member name="M:DevExpress.Utils.ViewStyles.ContainsValue(System.Object)">
            <summary>
                <para>Determines whether the hashtable contains a specific value (style's name).
</para>
            </summary>
            <param name="key">
		The value (style name) to locate in the hashtable.

            </param>
            <returns><b>true</b> if the hashtable contains an element with the specified value; otherwise, <b>false</b>.
</returns>

        </member>
        <member name="P:DevExpress.Utils.ViewStyles.Count">
            <summary>
                <para>Gets the number of key-and-value pairs contained in the hashtable.
</para>
            </summary>
            <value>The number of items in the hashtable.
</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyles.GetEnumerator">
            <summary>
                <para>Returns an <see cref="T:System.Collections.IDictionaryEnumerator"/> that can iterate through the hashtable.
</para>
            </summary>
            <returns>An <see cref="T:System.Collections.IDictionaryEnumerator"/> for the hashtable.
</returns>

        </member>
        <member name="P:DevExpress.Utils.ViewStyles.Item(System.String)">
            <summary>
                <para>Gets or sets the name of a style applied to a particular view element.
</para>
            </summary>
            <param name="key">
		A string value specifying the view element.

            </param>
            <value>The name of the style applied to the specified view element. <b>null</b> (<b>Nothing</b> in Visual Basic) if the view element is specified incorrectly.
</value>

        </member>
        <member name="P:DevExpress.Utils.ViewStyles.Item(System.Object)">
            <summary>
                <para>Gets or sets the value (style name) associated with a specific key (element's name).
</para>
            </summary>
            <param name="key">
		The key, for which to return the corresponding value. 

            </param>
            <value>The value associated with the specified key. <b>null</b> if the key is not found.
</value>

        </member>
        <member name="P:DevExpress.Utils.ViewStyles.Keys">
            <summary>
                <para>Gets an <see cref="T:System.Collections.ICollection"/> object containing all the keys in the hashtable.
</para>
            </summary>
            <value>An <see cref="T:System.Collections.ICollection"/> containing all keys in the hashtable.

</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyles.Remove(System.Object)">
            <summary>
                <para>Removes an item with the specified key (element's name) from the hashtable.
</para>
            </summary>
            <param name="key">
		The key of the item to remove.

            </param>

        </member>
        <member name="T:DevExpress.Utils.ViewStyleEx.ViewStyleEx">
            <summary>
                <para>Represents a style with extended settings.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(System.String,System.String,System.Drawing.Font,System.String,System.Boolean,System.Boolean,System.Boolean,DevExpress.Utils.HorzAlignment,DevExpress.Utils.VertAlignment,System.Drawing.Image,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with predefined settings.
</para>
            </summary>
            <param name="name">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="creatorClass">
		A string value specifying the creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>
            <param name="font">
		A <B>System.Drawing.Font</B> object specifying the font provided by the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Font"/> property.

            </param>
            <param name="parentStyleName">
		A string value specifying the parent style name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ParentStyleName"/> property.

            </param>
            <param name="drawEndEllipsis">
		<B>true</B> if objects using this style must draw an ellipsis when strings don't fit within their area; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawEndEllipsis"/> property.

            </param>
            <param name="wordWrap">
		<B>true</B> if objects using this style must use word wrapping for long strings; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.WordWrap"/> property.

            </param>
            <param name="drawFocusRect">
		<B>true</B> if a focus rectangle must be drawn around the object using the created style; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawFocusRect"/> property.

            </param>
            <param name="horzAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property.

            </param>
            <param name="vertAlignment">
		A <see cref="T:DevExpress.Utils.VertAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.VAlignment"/> property.

            </param>
            <param name="img">
		A <B>System.Drawing.Image</B> object specifying the image assigned to objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Image"/> property.

            </param>
            <param name="backColor">
		A <B>System.Drawing.Color</B> object specifying the starting color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property.

            </param>
            <param name="foreColor">
		A <B>System.Drawing.Color</B> object specifying the foreground color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property.

            </param>
            <param name="backColor2">
		A <B>System.Drawing.Color</B> object specifying the ending color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.BackColor2"/> property.

            </param>
            <param name="gradientMode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the direction for the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.GradientMode"/> property.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,DevExpress.Utils.HorzAlignment,DevExpress.Utils.VertAlignment,System.Drawing.Image,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with predefined settings.
</para>
            </summary>
            <param name="name">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="creatorClass">
		A string value specifying the creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>
            <param name="parentStyleName">
		A string value specifying the parent style name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ParentStyleName"/> property.

            </param>
            <param name="drawEndEllipsis">
		<B>true</B> if objects using this style must draw an ellipsis when strings don't fit within their area; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawEndEllipsis"/> property.

            </param>
            <param name="wordWrap">
		<B>true</B> if objects using this style must use word wrapping for long strings; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.WordWrap"/> property.

            </param>
            <param name="drawFocusRect">
		<B>true</B> if a focus rectangle must be drawn around the object using the created style; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawFocusRect"/> property.

            </param>
            <param name="horzAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property.

            </param>
            <param name="vertAlignment">
		A <see cref="T:DevExpress.Utils.VertAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.VAlignment"/> property.

            </param>
            <param name="img">
		A <B>System.Drawing.Image</B> object specifying the image assigned to objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Image"/> property.

            </param>
            <param name="backColor">
		A <B>System.Drawing.Color</B> object specifying the starting color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property.

            </param>
            <param name="foreColor">
		A <B>System.Drawing.Color</B> object specifying the foreground color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property.

            </param>
            <param name="backColor2">
		A <B>System.Drawing.Color</B> object specifying the ending color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.BackColor2"/> property.

            </param>
            <param name="gradientMode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the direction for the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.GradientMode"/> property.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(System.String,System.String,System.String,DevExpress.Utils.StyleOptions,System.Boolean,System.Boolean,System.Boolean,DevExpress.Utils.HorzAlignment,DevExpress.Utils.VertAlignment,System.Drawing.Image,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with predefined settings.
</para>
            </summary>
            <param name="name">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="creatorClass">
		A string value specifying the creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>
            <param name="parentStyleName">
		A string value specifying the parent style name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ParentStyleName"/> property.

            </param>
            <param name="options">
		A set of <see cref="T:DevExpress.Utils.StyleOptions"/> flags specifying options of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Options"/> property.

            </param>
            <param name="drawEndEllipsis">
		<B>true</B> if objects using this style must draw an ellipsis when strings don't fit within their area; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawEndEllipsis"/> property.

            </param>
            <param name="wordWrap">
		<B>true</B> if objects using this style must use word wrapping for long strings; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.WordWrap"/> property.

            </param>
            <param name="drawFocusRect">
		<B>true</B> if a focus rectangle must be drawn around the object using the created style; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawFocusRect"/> property.

            </param>
            <param name="horzAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property.

            </param>
            <param name="vertAlignment">
		A <see cref="T:DevExpress.Utils.VertAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.VAlignment"/> property.

            </param>
            <param name="img">
		A <B>System.Drawing.Image</B> object specifying the image assigned to objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Image"/> property.

            </param>
            <param name="backColor">
		A <B>System.Drawing.Color</B> object specifying the starting color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property.

            </param>
            <param name="foreColor">
		A <B>System.Drawing.Color</B> object specifying the foreground color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property.

            </param>
            <param name="backColor2">
		A <B>System.Drawing.Color</B> object specifying the ending color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.BackColor2"/> property.

            </param>
            <param name="gradientMode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the direction for the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.GradientMode"/> property.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(System.String,System.String,System.Drawing.Font,System.String,DevExpress.Utils.StyleOptions,System.Boolean,System.Boolean,System.Boolean,DevExpress.Utils.HorzAlignment,DevExpress.Utils.VertAlignment,System.Drawing.Image,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with predefined settings.
</para>
            </summary>
            <param name="name">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="creatorClass">
		A string value specifying the creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>
            <param name="font">
		A <B>System.Drawing.Font</B> object specifying the font provided by the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Font"/> property.

            </param>
            <param name="parentStyleName">
		A string value specifying the parent style name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ParentStyleName"/> property.

            </param>
            <param name="options">
		A set of <see cref="T:DevExpress.Utils.StyleOptions"/> flags specifying options of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Options"/> property.

            </param>
            <param name="drawEndEllipsis">
		<B>true</B> if objects using this style must draw an ellipsis when strings don't fit within their area; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawEndEllipsis"/> property.

            </param>
            <param name="wordWrap">
		<B>true</B> if objects using this style must use word wrapping for long strings; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.WordWrap"/> property.

            </param>
            <param name="drawFocusRect">
		<B>true</B> if a focus rectangle must be drawn around the object using the created style; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawFocusRect"/> property.

            </param>
            <param name="horzAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property.

            </param>
            <param name="vertAlignment">
		A <see cref="T:DevExpress.Utils.VertAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.VAlignment"/> property.

            </param>
            <param name="img">
		A <B>System.Drawing.Image</B> object specifying the image assigned to objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Image"/> property.

            </param>
            <param name="backColor">
		A <B>System.Drawing.Color</B> object specifying the starting color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property.

            </param>
            <param name="foreColor">
		A <B>System.Drawing.Color</B> object specifying the foreground color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property.

            </param>
            <param name="backColor2">
		A <B>System.Drawing.Color</B> object specifying the ending color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.BackColor2"/> property.

            </param>
            <param name="gradientMode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the direction for the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.GradientMode"/> property.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(System.String,System.String,System.Drawing.Font,System.String,DevExpress.Utils.StyleOptions,System.Boolean,System.Boolean,System.Boolean,DevExpress.Utils.HorzAlignment,DevExpress.Utils.VertAlignment,System.Drawing.Image,System.Drawing.Color,System.Drawing.Color)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with predefined settings.
</para>
            </summary>
            <param name="name">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="creatorClass">
		A string value specifying the creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>
            <param name="font">
		A <B>System.Drawing.Font</B> object specifying the font provided by the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Font"/> property.

            </param>
            <param name="parentStyleName">
		A string value specifying the parent style name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ParentStyleName"/> property.

            </param>
            <param name="options">
		A set of <see cref="T:DevExpress.Utils.StyleOptions"/> flags specifying options of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Options"/> property.

            </param>
            <param name="drawEndEllipsis">
		<B>true</B> if objects using this style must draw an ellipsis when strings don't fit within their area; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawEndEllipsis"/> property.

            </param>
            <param name="wordWrap">
		<B>true</B> if objects using this style must use word wrapping for long strings; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.WordWrap"/> property.

            </param>
            <param name="drawFocusRect">
		<B>true</B> if a focus rectangle must be drawn around the object using the created style; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawFocusRect"/> property.

            </param>
            <param name="horzAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property.

            </param>
            <param name="vertAlignment">
		A <see cref="T:DevExpress.Utils.VertAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.VAlignment"/> property.

            </param>
            <param name="img">
		A <B>System.Drawing.Image</B> object specifying the image assigned to objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Image"/> property.

            </param>
            <param name="backColor">
		A <B>System.Drawing.Color</B> object specifying the background color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property.

            </param>
            <param name="foreColor">
		A <B>System.Drawing.Color</B> object specifying the foreground color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(System.String,System.String)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with a predefined name and creator class.
</para>
            </summary>
            <param name="name">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="creatorClass">
		A string value specifying the creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(System.String)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with a predefined name.
</para>
            </summary>
            <param name="name">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with default settings.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(System.String,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with predefined settings.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="styleCreator">
		A string value specifying the creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object specifying the font used for drawing the text. The object is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Font"/> property.

            </param>
            <param name="backColor">
		A <B>System.Drawing.Color</B> object specifying the starting color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property.

            </param>
            <param name="foreColor">
		A <B>System.Drawing.Color</B> object specifying the foreground color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property.

            </param>
            <param name="backColor2">
		A <B>System.Drawing.Color</B> object specifying the ending color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.BackColor2"/> property.

            </param>
            <param name="gradientMode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the direction for the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.GradientMode"/> property.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(System.String,System.String,System.Drawing.Font,DevExpress.Utils.StyleOptions,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with predefined settings.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="styleCreator">
		A string value specifying creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object specifying the font used for drawing the text. The object is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Font"/> property.

            </param>
            <param name="options">
		A set of <see cref="T:DevExpress.Utils.StyleOptions"/> flags specifying options for the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Options"/> property.

            </param>
            <param name="backColor">
		A <B>System.Drawing.Color</B> object specifying the starting color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property.

            </param>
            <param name="foreColor">
		A <B>System.Drawing.Color</B> object specifying the foreground color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property.

            </param>
            <param name="backColor2">
		A <B>System.Drawing.Color</B> object specifying the ending color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.BackColor2"/> property.

            </param>
            <param name="gradientMode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the direction for the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.GradientMode"/> property.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(System.String,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with predefined settings.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="styleCreator">
		A string value specifying the creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>
            <param name="backColor">
		A <B>System.Drawing.Color</B> object specifying the starting color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property.

            </param>
            <param name="foreColor">
		A <B>System.Drawing.Color</B> object specifying the foreground color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property.

            </param>
            <param name="backColor2">
		A <B>System.Drawing.Color</B> object specifying the ending color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.BackColor2"/> property.

            </param>
            <param name="gradientMode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the direction for the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.GradientMode"/> property.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.AssignTo(DevExpress.Utils.ViewStyle)">
            <summary>
                <para>Assigns the contents of this object to another <see cref="T:DevExpress.Utils.ViewStyle"/> object.
</para>
            </summary>
            <param name="vs">
		A <see cref="T:DevExpress.Utils.ViewStyle"/> object or descendant to which the contents of this object are assigned.

            </param>

        </member>
        <member name="P:DevExpress.Utils.ViewStyleEx.BackColor2">
            <summary>
                <para>Specifies the ending color of the linear gradient brush used to fill the object's background.
</para>
            </summary>
            <value>A <B>System.Drawing.Color</B> object specifying the ending color of the linear gradient brush used to fill the object's background.
</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.FillRectangle(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle)">
            <summary>
                <para>Fills a specified rectangle with the brush specified via this <see cref="T:DevExpress.Utils.ViewStyleEx"/> object's settings.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.GraphicsCache"/> object used to store pens and bushes used to paint and provide access to the <B>Graphics</B> object.

            </param>
            <param name="rect">
		A <B>System.Drawing.Rectangle</B> structure specifying the rectangle to be filled.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.FillRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
                <para>Fills the specified rectangle with the background brush defined by the style object.
</para>
            </summary>
            <param name="g">
		A <B>System.Drawing.Graphics</B> object representing the painting surface.

            </param>
            <param name="r">
		A <B>System.Drawing.Rectangle</B> structure that specifies the rectangle to be filled.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.GetBackBrush(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle)">
            <summary>
                <para>Gets the brush specified via this <see cref="T:DevExpress.Utils.ViewStyleEx"/> object's settings.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.GraphicsCache"/> object that provides access to pens and brushes used to paint.

            </param>
            <param name="rect">
		A <B>System.Drawing.Rectangle</B> structure specifying the rectangle for which a brush is created.

            </param>
            <returns>A <B>System.Drawing.Brush</B> object representing the brush specified via the <see cref="T:DevExpress.Utils.ViewStyleEx"/> object's settings.
</returns>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.GetBackBrush(System.Drawing.Rectangle)">
            <summary>
                <para>Gets the brush specified via this <see cref="T:DevExpress.Utils.ViewStyleEx"/> object's settings.
</para>
            </summary>
            <param name="rect">
		A <B>System.Drawing.Rectangle</B> structure specifying the rectangle for which a brush is created.

            </param>
            <returns>A <B>System.Drawing.Brush</B> object representing the brush specified via the <see cref="T:DevExpress.Utils.ViewStyleEx"/> object's settings.
</returns>

        </member>
        <member name="P:DevExpress.Utils.ViewStyleEx.GradientMode">
            <summary>
                <para>Gets or sets a direction for the linear gradient brush specified via this <see cref="T:DevExpress.Utils.ViewStyleEx"/> object's settings.
</para>
            </summary>
            <value>A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the gradient brush direction.
</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.IsEqualTo(DevExpress.Utils.ViewStyle)">
            <summary>
                <para>Gets a value indicating whether properties of the specified object return the same values as properties of this object.
</para>
            </summary>
            <param name="vs">
		A <see cref="T:DevExpress.Utils.ViewStyle"/> object or descendant whose property values are compared to this object's properties.

            </param>
            <returns><B>true</B> if property values are the same; otherwise <B>false</B>.
</returns>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.IsFieldsEqualTo(DevExpress.Utils.ViewStyle)">
            <summary>
                <para>Gets a value indicating whether field values of the specified object are the same as field values of this object.
</para>
            </summary>
            <param name="vs">
		A <see cref="T:DevExpress.Utils.ViewStyle"/> object or descendant whose property values are compared to this object's properties.

            </param>
            <returns><B>true</B> if property values are the same; otherwise <B>false</B>.
</returns>

        </member>
        <member name="P:DevExpress.Utils.ViewStyleEx.IsGradientBack">
            <summary>
                <para>Gets a value indicating whether the background must be painted using a gradient brush. 
</para>
            </summary>
            <value><B>true</B> if the background must be painted using a gradient brush; otherwise <B>false</B>.
</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.Reset">
            <summary>
                <para>Sets properties of this <see cref="T:DevExpress.Utils.ViewStyleEx"/> object to their default values.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Utils.CreateViewStyleEventHandler.CreateViewStyleEventHandler">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ViewStyleHashtable.CreateViewStyle"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.CreateViewStyleEventHandler.Invoke(System.Object,DevExpress.Utils.CreateViewStyleEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ViewStyleHashtable.CreateViewStyle"/> event.
</para>
            </summary>
            <param name="sender">
		An object representing the source of the event (typically the <see cref="T:DevExpress.Utils.ViewStyleHashtable"/> object to which a style is about to be added).

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.CreateViewStyleEventArgs"/> object that contains event data.

            </param>

        </member>
        <member name="T:DevExpress.Utils.CreateViewStyleEventArgs.CreateViewStyleEventArgs">
            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Utils.ViewStyleHashtable.CreateViewStyle"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.CreateViewStyleEventArgs.#ctor(System.String,System.String)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.CreateViewStyleEventArgs"/> class.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the style which is about to be created. This value is assigned to the <see cref="P:DevExpress.Utils.CreateViewStyleEventArgs.StyleName"/> property.

            </param>
            <param name="creatorName">
		A string value identifying the creator of the style. This value is assigned to the <see cref="P:DevExpress.Utils.CreateViewStyleEventArgs.CreatorName"/> property.

            </param>

        </member>
        <member name="P:DevExpress.Utils.CreateViewStyleEventArgs.CreatorName">
            <summary>
                <para>Gets the name of the style creator.
</para>
            </summary>
            <value>A string value identifying the style creator.
</value>

        </member>
        <member name="P:DevExpress.Utils.CreateViewStyleEventArgs.Style">
            <summary>
                <para>Gets or sets the style which is about to be created and added to a hash table.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ViewStyle"/> object (or descendant) representing the style which is about to be added to a hashtable.
</value>

        </member>
        <member name="P:DevExpress.Utils.CreateViewStyleEventArgs.StyleName">
            <summary>
                <para>Gets the style name.
</para>
            </summary>
            <value>A string value specifying the style name.
</value>

        </member>
        <member name="T:DevExpress.XtraPrinting.IBrick.IBrick">
            <summary>
                <para>Provides the basic functionality to draw brick objects and to specify brick properties.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.IBrick.Draw(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
                <para>Draws a brick object on the graphics surface within the specified rectangle.
</para>
            </summary>
            <param name="gr">
		A <B>Graphics</B> object representing the current GDI+ drawing surface.

            </param>
            <param name="r">
		A <B>RectangleF</B> structure that specifies the location and size of the current brick in <b>GraphicsUnit.Document</b> units. See the <b>GraphicsUnit enumeration</b> topic in MSDN for more information.

            </param>

        </member>
        <member name="M:DevExpress.XtraPrinting.IBrick.GetProperties">
            <summary>
                <para>Obtains the <b>Hashtable</b> collection of properties for the class that implements the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface.
</para>
            </summary>
            <returns>A <b>Hashtable</b> object that contains properties of the class that implements the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface.
</returns>

        </member>
        <member name="M:DevExpress.XtraPrinting.IBrick.SetProperties(System.Object[,])">
            <summary>
                <para>Sets property values for the class which implements the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface based on the specified <i>properties</i> array.
</para>
            </summary>
            <param name="properties">
		A two-dimesional array that identifies property names and values to set.

            </param>

        </member>
        <member name="M:DevExpress.XtraPrinting.IBrick.SetProperties(System.Collections.Hashtable)">
            <summary>
                <para>Sets property values for the class which implements the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface
based on the specified <b>Hashtable</b> object.
</para>
            </summary>
            <param name="properties">
		Identifies the <b>Hashtable</b> collection of property names and values that must be set.

            </param>

        </member>
        <member name="T:DevExpress.XtraPrinting.IAccessible.IAccessible">
            <summary>
                <para>Declares methods to access properties and methods of a class implementing this interface by its names.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.IAccessible.GetProperty(System.String)">
            <summary>
                <para> Retrieves the specified property value  if implemented by a class.
</para>
            </summary>
            <param name="name">
		The property name.

            </param>
            <returns>The property value to retrieve.
</returns>

        </member>
        <member name="M:DevExpress.XtraPrinting.IAccessible.InvokeMethod(System.String,System.Object[])">
            <summary>
                <para>Invokes a class method by its name if implemented by a class.
</para>
            </summary>
            <param name="name">
		The name of the method to invoke.

            </param>
            <param name="args">
		An array of parameters to pass to a method.

            </param>
            <returns>The method value to invoke.
</returns>

        </member>
        <member name="M:DevExpress.XtraPrinting.IAccessible.SetProperty(System.String,System.Object)">
            <summary>
                <para>Assigns a property value by its name if implemented by a class.
</para>
            </summary>
            <param name="name">
		The name of the property to set.

            </param>
            <param name="value">
		The property value to set.

            </param>

        </member>
        <member name="T:DevExpress.XtraPrinting.IPrintingSystem.IPrintingSystem">
            <summary>
                <para>Provides the base functionality of the <B>XtraPrinting Library</B>.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.XtraPrinting.IPrintingSystem.AfterChange">
            <summary>
                <para>Occurs after certain properties of the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> object have been changed.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.XtraPrinting.IPrintingSystem.BeforeChange">
            <summary>
                <para>Occurs before certain properties of the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> object are changed.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateBrick(System.String)">
            <summary>
                <para>If implemented by a class, creates a brick by its type name.
</para>
            </summary>
            <param name="typeName">
		The type name of the brick to create.

            </param>
            <returns>The brick object created by the method.
</returns>

        </member>
        <member name="P:DevExpress.XtraPrinting.IPrintingSystem.Version">
            <summary>
                <para>Identifies the <b>XtraPrinting Library</b> version.
</para>
            </summary>
            <value>A text string representing <b>XtraPrinting Library</b>'s version info.
</value>

        </member>
        <member name="T:DevExpress.XtraPrinting.ILink.ILink">
            <summary>
                <para>Provides the basic functionality to create reports.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.ILink.CreateDocument">
            <summary>
                <para>Initiates report generation if implemented by a class.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.XtraPrinting.IBrickGraphics.IBrickGraphics">
            <summary>
                <para>Provides basic report drawing functions.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.XtraPrinting.IBrickGraphics.DefaultBrickStyle">
            <summary>
                <para>Gets and sets the default style for bricks.
</para>
            </summary>
            <value>The default style for bricks.
</value>

        </member>
        <member name="M:DevExpress.XtraPrinting.IBrickGraphics.DrawBrick(DevExpress.XtraPrinting.IBrick,System.Drawing.RectangleF)">
            <summary>
                <para>Adds a brick to a report if implemented by a class.
</para>
            </summary>
            <param name="brick">
		The brick to be added to a report.

            </param>
            <param name="rect">
		A <B>RectangleF</B> structure that specifies the location and size of the current brick.

            </param>
            <returns>The brick added to a report.
</returns>

        </member>
        <member name="T:DevExpress.XtraEditors.Controls.ButtonPredefines.ButtonPredefines">
            <summary>
                <para>Specifies the surface image of a button.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Close">
            <summary>
                <para>A Close symbol is displayed on the button's surface.
<para>

</para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Combo">
            <summary>
                <para>A Down-arrow for a combo box is drawn on the button's surface.
<para>

</para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Delete">
            <summary>
                <para>A Delete symbol is drawn on the button's surface.
<para>

</para>

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Down">
            <summary>
                <para>A Down-arrow is drawn on the button's surface.
<para>

</para>

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Ellipsis">
            <summary>
                <para>An Ellipsis symbol is drawn on the button's surface.
<para>

</para>

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Glyph">
            <summary>
                <para>A custom bitmap is drawn on the button's surface.
<para>

</para>

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Left">
            <summary>
                <para>A Left-arrow symbol is drawn on the button's surface.
<para>

</para>

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Minus">
            <summary>
                <para>A Minus sign is drawn on the button's surface.
<para>

</para>

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.OK">
            <summary>
                <para>An OK sign is drawn on the button's surface.
<para>

</para>

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Plus">
            <summary>
                <para>A Plus sign is drawn on the button's surface.
<para>

</para>

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Redo">
            <summary>
                <para>A Redo symbol is drawn on the button's surface.
<para>

</para>

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Right">
            <summary>
                <para>A Right-arrow is drawn the button's surface.
<para>

</para>

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.SpinDown">
            <summary>
                <para>A down-arrow for a spin editor is displayed on the button's surface.
<para>

</para>

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.SpinLeft">
            <summary>
                <para>A left-arrow for a spin editor is displayed on the button's surface.
<para>

</para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.SpinRight">
            <summary>
                <para>A right-arrow for a spin editor is displayed on the button's surface.
<para>

</para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.SpinUp">
            <summary>
                <para>An up-arrow for a spin editor is displayed on the button's surface.
<para>

</para>
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Undo">
            <summary>
                <para>An Undo symbol is drawn on the button's surface.
<para>

</para>

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Up">
            <summary>
                <para>An Up-arrow is drawn on the button's surface.
<para>

</para>

</para>
            </summary>

        </member>
        <member name="T:DevExpress.XtraEditors.Controls.ButtonStates.ButtonStates">
            <summary>
                <para>Specifies the state of an <see cref="T:DevExpress.XtraEditors.Controls.EditorButton"/>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.DeepPush">
            <summary>
                <para>A button is highlighted when mouse crosses the entire button boundaries.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.Disabled">
            <summary>
                <para>A button is disabled and does not respond to end-user actions.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.Hottrack">
            <summary>
                <para>A button is highlighted when the mouse enters its boundaries.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.None">
            <summary>
                <para>A button is drawn using its default look and feel.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.Push">
            <summary>
                <para>A button is drawn to reflect a pressed state.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.XtraPrinting.EventInfo.EventInfo">
            <summary>
                <para>Specifies information on the property to pass to the <see cref="E:DevExpress.XtraPrinting.IPrintingSystem.BeforeChange"/> and <see cref="E:DevExpress.XtraPrinting.IPrintingSystem.AfterChange"/> events handlers.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.EventInfo.#ctor(System.String,System.Object)">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.XtraPrinting.EventInfo"/> class instance with the property name and property value.
</para>
            </summary>
            <param name="name">
		The property name to initialize the <see cref="T:DevExpress.XtraPrinting.EventInfo"/> object.

            </param>
            <param name="value">
		The property value to initialize the <see cref="T:DevExpress.XtraPrinting.EventInfo"/> object.

            </param>

        </member>
        <member name="P:DevExpress.XtraPrinting.EventInfo.Name">
            <summary>
                <para>Identifies the property name to pass to the <see cref="E:DevExpress.XtraPrinting.IPrintingSystem.BeforeChange"/> and <see cref="E:DevExpress.XtraPrinting.IPrintingSystem.AfterChange"/> events handlers.
</para>
            </summary>
            <value>The property name.
</value>

        </member>
        <member name="P:DevExpress.XtraPrinting.EventInfo.Value">
            <summary>
                <para>Specifies a value for the property which is described by the current <see cref="T:DevExpress.XtraPrinting.EventInfo"/> object.
</para>
            </summary>
            <value>The value of the property.
</value>

        </member>
        <member name="T:DevExpress.XtraPrinting.ChangeEventHandler.ChangeEventHandler">
            <summary>
                <para>Represents a method that will handle the <b>BeforeChange</b> and <b>AfterChange</b> events of the <see cref="T:DevExpress.XtraPrinting.PrintingSystem"/> class and the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.ChangeEventHandler.Invoke(System.Object,DevExpress.XtraPrinting.ChangeEventArgs)">
            <summary>
                <para>Represents a method that will handle the <b>BeforeChange</b> and <b>AfterChange</b> events of the <see cref="T:DevExpress.XtraPrinting.PrintingSystem"/> class and the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface.
</para>
            </summary>
            <param name="sender">
		The event source.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.XtraPrinting.ChangeEventArgs"/> that contains event data.

            </param>

        </member>
        <member name="T:DevExpress.XtraPrinting.ChangeEventArgs.ChangeEventArgs">
            <summary>
                <para>Provides data for the <b>BeforeChange</b> and <b>AfterChange</b> events of the <see cref="T:DevExpress.XtraPrinting.PrintingSystem"/> class and the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.ChangeEventArgs.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.ChangeEventArgs"/> class and sets its <see cref="P:DevExpress.XtraPrinting.ChangeEventArgs.EventName"/> property to a specified value.
</para>
            </summary>
            <param name="eventName">
		The event name.

            </param>

        </member>
        <member name="P:DevExpress.XtraPrinting.ChangeEventArgs.EventName">
            <summary>
                <para>Gets the event name that initiated a <b>ChangeEvent</b>.
</para>
            </summary>
            <value>The event name that initiated a <b>ChangeEvent</b>.
</value>

        </member>
        <member name="P:DevExpress.XtraPrinting.ChangeEventArgs.InfoList">
            <summary>
                <para>Gets the collection of <see cref="T:DevExpress.XtraPrinting.EventInfo"/> class instances that represent supported properties.
</para>
            </summary>
            <value>The collection of <see cref="T:DevExpress.XtraPrinting.EventInfo"/> class instances that represet supported properties.
</value>

        </member>
        <member name="P:DevExpress.XtraPrinting.ChangeEventArgs.Item(System.String)">
            <summary>
                <para>Gets an <see cref="T:DevExpress.XtraPrinting.EventInfo"/> class instance with a specific <see cref="P:DevExpress.XtraPrinting.EventInfo.Name"/> property value within the <see cref="P:DevExpress.XtraPrinting.ChangeEventArgs.InfoList"/> collection.
</para>
            </summary>
            <param name="name">
		The <see cref="P:DevExpress.XtraPrinting.EventInfo.Name"/> property of the item to access.

            </param>
            <value>An <see cref="T:DevExpress.XtraPrinting.EventInfo"/> class instance with a specific <see cref="P:DevExpress.XtraPrinting.EventInfo.Name"/> property value.
</value>

        </member>
        <member name="P:DevExpress.XtraPrinting.ChangeEventArgs.Item(System.Int32)">
            <summary>
                <para>Gets an item within the <see cref="P:DevExpress.XtraPrinting.ChangeEventArgs.InfoList"/> collection at the specified index.
</para>
            </summary>
            <param name="index">
		The zero-based index of the item to get or set.

            </param>
            <value>An item at the specified index.
</value>

        </member>
        <member name="T:DevExpress.XtraPrinting.BrickStyle.BrickStyle">
            <summary>
                <para>Represents a report drawing style.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> class.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.#ctor(DevExpress.XtraPrinting.BorderSide,System.Single,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,DevExpress.XtraPrinting.BrickStringFormat)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> class.
</para>
            </summary>
            <param name="sides">
		Visible brick borders.

            </param>
            <param name="borderWidth">
		The border width.

            </param>
            <param name="borderColor">
		The border color

            </param>
            <param name="backColor">
		The background color.

            </param>
            <param name="foreColor">
		The foreground color.

            </param>
            <param name="font">
		Font settings.

            </param>
            <param name="sf">
		Text formatting and layout settings.

            </param>

        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.BackColor">
            <summary>
                <para>Gets or sets the background color.
</para>
            </summary>
            <value>A <B>Color</B> representing the background color.
</value>

        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.BorderColor">
            <summary>
                <para>Gets or sets the border color.
</para>
            </summary>
            <value>A <B>Color</B> representing the border color. 
</value>

        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.BorderWidth">
            <summary>
                <para>Gets or sets the border width.
</para>
            </summary>
            <value>The border width.
</value>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.Clone">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance, which is a copy of the current instance.

</para>
            </summary>
            <returns>A new <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance, which is a copy of the current instance.

</returns>

        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.DefaultFont">
            <summary>
                <para>Gets the default font for a brick style.
</para>
            </summary>
            <value>The default font for a brick style.
</value>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.Equals(System.Object)">
            <summary>
                <para>Determines whether the specified <B>Object</B> is equal to the current <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance.
</para>
            </summary>
            <param name="obj">
		The <B>Object</B> to compare with the current <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance.

            </param>
            <returns><B>true</B>, if the specified <B>Object</B> is equal to the current <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance, otherwise, <B>false</B>.
</returns>

        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.Font">
            <summary>
                <para>Gets or sets the <B>Font</B> used to display text.
</para>
            </summary>
            <value>The <B>Font</B> used to display text.
</value>

        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.ForeColor">
            <summary>
                <para>Gets or sets the foreground color.
</para>
            </summary>
            <value>The foreground color.
</value>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.GetHashCode">
            <summary>
                <para>Serves as a hash function suitable for use in hashing algorithms and data structures like a hash table.

</para>
            </summary>
            <returns>Hash code for the current <see cref="T:DevExpress.XtraPrinting.BrickStyle"/>.

</returns>

        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.Sides">
            <summary>
                <para>Gets or sets a value defining which borders of the current brick are visible.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumerator value, defining visible brick borders.
</value>

        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.StringFormat">
            <summary>
                <para>Gets or sets a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance specifying text formatting and layout.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> specifying text formatting and layout.
</value>

        </member>
        <member name="T:DevExpress.XtraPrinting.Accessor.Accessor">
            <summary>
                <para>This class supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.Accessor.#ctor">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.Accessor.GetProperties(System.Object,System.Collections.Hashtable)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <param name="obj">
		 [To be supplied] 
            </param>
            <param name="ht">
		 [To be supplied] 
            </param>

        </member>
        <member name="M:DevExpress.XtraPrinting.Accessor.GetProperty(System.Object,System.String)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <param name="obj">
		 [To be supplied] 
            </param>
            <param name="name">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>

        </member>
        <member name="M:DevExpress.XtraPrinting.Accessor.InvokeMethod(System.Object,System.String,System.Object[])">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <param name="obj">
		 [To be supplied] 
            </param>
            <param name="name">
		 [To be supplied] 
            </param>
            <param name="args">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>

        </member>
        <member name="M:DevExpress.XtraPrinting.Accessor.SetProperties(System.Object,System.Collections.Hashtable)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <param name="obj">
		 [To be supplied] 
            </param>
            <param name="ht">
		 [To be supplied] 
            </param>

        </member>
        <member name="M:DevExpress.XtraPrinting.Accessor.SetProperties(System.Object,System.Object[,])">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <param name="obj">
		 [To be supplied] 
            </param>
            <param name="array">
		 [To be supplied] 
            </param>

        </member>
        <member name="M:DevExpress.XtraPrinting.Accessor.SetProperty(System.Object,System.String,System.Object)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <param name="obj">
		
            </param>
            <param name="name">
		

            </param>
            <param name="value">
		

            </param>

        </member>
        <member name="T:DevExpress.XtraPrinting.Accessible.Accessible">
            <summary>
                <para>Serves as the base for classes that allow you to access their properties and methods by their names.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.Accessible.#ctor">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.XtraPrinting.Accessible"/> class instance with default settings.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Utils.HorzAlignment.HorzAlignment">
            <summary>
                <para>Specifies the horizontal alignment of an object or text in a control.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.HorzAlignment.Center">
            <summary>
                <para>Centers an object or text within an object.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.HorzAlignment.Default">
            <summary>
                <para>Places an object or text at the position specified via the <B>RightToLeft</B> property.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.HorzAlignment.Far">
            <summary>
                <para>Sets the object/text position relative to its default position within an object.
The default position of the text is specified via the <B>RightToLeft</B> property. If the default alignment is left, setting the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property to <see cref="F:DevExpress.Utils.HorzAlignment.Far"/> value places the text to the right. On the contrary, if the default alignment is right, setting the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property to <see cref="F:DevExpress.Utils.HorzAlignment.Far"/> value places the text to the left.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.HorzAlignment.Near">
            <summary>
                <para>Sets the object/text position relative to its default position within an object.
The default position of the text is specified via the <B>RightToLeft</B> property. If the default alignment is left, setting the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property to <see cref="F:DevExpress.Utils.HorzAlignment.Near"/> value places the text to the right. On the contrary, if the default alignment is right, setting the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property to <see cref="F:DevExpress.Utils.HorzAlignment.Near"/> value places the text to the right.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Utils.ViewStyle.ViewStyle">
            <summary>
                <para>Contains settings for an object's contents.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.#ctor">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.Utils.ViewStyle"/> class instance with default settings.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.#ctor(System.String,System.String)">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.Utils.ViewStyle"/> class instance .
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value that specifies the name of the newly created style.

            </param>
            <param name="creatorClass">
		A <see cref="T:System.String"/> value that specifies the class name from which the current style was created.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.#ctor(System.String,System.String,System.Drawing.Font,System.String,DevExpress.Utils.StyleOptions,System.Boolean,System.Boolean,System.Boolean,DevExpress.Utils.HorzAlignment,DevExpress.Utils.VertAlignment,System.Drawing.Image,System.Drawing.Color,System.Drawing.Color)">
            <summary>
                <para>Initializes a <see cref="T:DevExpress.Utils.ViewStyle"/> class instance using the settings defined by parameters.
</para>
            </summary>
            <param name="name">
		The style name.

            </param>
            <param name="creatorClass">
		The style owner name.

            </param>
            <param name="font">
		The font used in a style.

            </param>
            <param name="parentStyleName">
		The parent style name.

            </param>
            <param name="options">
		The options defined for a style.

            </param>
            <param name="drawEndEllipsis">
		<B>true</B>, if out of range symbols in object text are replaced with dots, otherwise, <B>false</B>

            </param>
            <param name="wordWrap">
		<B>true</B> if the text line in an object is broken to match object bounds, otherwise, <B>false</B>.

            </param>
            <param name="drawFocusRect">
		<B>true</B>, if a rectangle is drawn within an object when an object gets focus, otherwise, <B>false</B>.

            </param>
            <param name="horzAlignment">
		The horizontal alignment settings for a style.

            </param>
            <param name="vertAlignment">
		The vertical alignment settings for a style.

            </param>
            <param name="img">
		The background image of a style.

            </param>
            <param name="backColor">
		The background color for a style.

            </param>
            <param name="foreColor">
		The foreground color for a style.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.#ctor(System.String)">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.Utils.ViewStyle"/> class instance. 
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value that specifies style name.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.Assign(DevExpress.Utils.ViewStyle)">
            <summary>
                <para>Copies properties of the specified <see cref="T:DevExpress.Utils.ViewStyle"/> object to the current one.
</para>
            </summary>
            <param name="vs">
		The <see cref="T:DevExpress.Utils.ViewStyle"/> object whose properties should be copied.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.AssignTo(DevExpress.Utils.ViewStyle)">
            <summary>
                <para>Copies the style options of one style to another.
</para>
            </summary>
            <param name="vs">
		A <see cref="T:DevExpress.Utils.ViewStyle"/> object that represents the style into which settings are copied.

            </param>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.BackBrush">
            <summary>
                <para>Gets a value representing the brush used to paint the background.
</para>
            </summary>
            <value>A <B>System.Drawing.Brush</B> object contaning the brush used to paint the background.
</value>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.BackColor">
            <summary>
                <para>Gets or sets a value representing the background color of a style.
</para>
            </summary>
            <value>A <B>Color</B> representing the background color of a style.
</value>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.BackPen">
            <summary>
                <para>Gets a value representing a pen used for drawing in the  background.
</para>
            </summary>
            <value>A <B>System.drawing.Pen</B> object repersenting a pen for drawing in the background.
</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.BeginUpdate">
            <summary>
                <para>Prevents multiple firing of the <see cref="E:DevExpress.Utils.ViewStyle.Changed"/> event.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.Cache">
            <summary>
                <para>Gets or sets a <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object specifying the storage for the most often used pens, fonts and brushes.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object
</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.CalcTextSize(System.Drawing.Graphics,System.String,System.Int32)">
            <summary>
                <para>Calculates the dimensions of the rectangle that contains a specified string.
</para>
            </summary>
            <param name="g">
		The current GDI+ drawing surface.

            </param>
            <param name="s">
		The string to be measured.

            </param>
            <param name="width">
		The maximum width of a string.

            </param>
            <returns>The height and width of the string rectangle.
</returns>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.CalcTextSize(System.Drawing.Graphics,System.Drawing.StringFormat,System.String,System.Int32)">
            <summary>
                <para>Calculates the size of the string painted with a predefined font, format and maximum width allowed.
</para>
            </summary>
            <param name="g">
		A <B>System.Drawing.Graphics</B> object used to paint the string.

            </param>
            <param name="sf">
		A <B>System.Drawing.StringFormat</B> object containing format information for the string.

            </param>
            <param name="s">
		A string value specifying the painted string.

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string.

            </param>
            <returns>A <B>System.Drawing.SizeF</B> structure specifying the size of the painted string in pixels.
</returns>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.CancelUpdate">
            <summary>
                <para>Cancels the changes made after a <see cref="M:DevExpress.Utils.ViewStyle.BeginUpdate"/> method call.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.CanDelete">
            <summary>
                <para>Specifies whether the specified style can be deleted.
</para>
            </summary>
            <value><B>true</B> - the style can be removed. otherwise - <B>false</B>.
</value>

        </member>
        <member name="E:DevExpress.Utils.ViewStyle.Changed">
            <summary>
                <para>Occurs when any changes are applied to style properties.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.Collection">
            <summary>
                <para>Gets a <see cref="T:DevExpress.Utils.ViewStyleHashtable"/> collection to which the current style belongs.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ViewStyleHashtable"/> collection that owns the current style object; <b>null</b> if the style does not belong to any collection.
</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.CreateResources">
            <summary>
                <para>Creates resources used for painting object contents.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.DefaultFont">
            <summary>
                <para>Gets the default font used when the <see cref="P:DevExpress.Utils.ViewStyle.Font"/> property value is not specified.
</para>
            </summary>
            <value>A <B>System.Drawing.Font</B> object that contains default font settings.
</value>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.DefaultHorzAlignment">
            <summary>
                <para>Gets the horizontal alignment of object contents.
</para>
            </summary>
            <value>The horizontal alignment of object contents.
</value>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.DefaultStyleOptions">
            <summary>
                <para>Gets the value representing default style options.
</para>
            </summary>
            <value>The default options for style.
</value>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.DrawEndEllipsis">
            <summary>
                <para>Specifies whether the end of a string is truncated and ellipses are added, when the text does not fit in the rectangle.

</para>
            </summary>
            <value><B>true</B> - text is replaced with ellipsis ('...'), otherwise, <B>false</B>.
</value>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.DrawFocusRect">
            <summary>
                <para>Specifies whether the focus rectangle is drawn around an object.
</para>
            </summary>
            <value><B>true</B> if the rectangle is visible; otherwise, <B>false</B>.
</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.DrawRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
                <para>Draws a rectangle at a specified position using the <see cref="P:DevExpress.Utils.ViewStyle.ForePen"/> property.
</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object representing the current GDI+ drawing surface. 

            </param>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing location. 

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.DrawString(System.Drawing.Graphics,System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,System.Drawing.StringFormat)">
            <summary>
                <para>Draws a text string at the specified location using the specified brush and string format description.
</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object representing the current GDI+ drawing surface.

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value representing the name of the string to be drawn.

            </param>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing location.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object used for drawing a string.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object representing the brush for text painting or texturing 

            </param>
            <param name="strFormat">
		A <see cref="T:System.Drawing.StringFormat"/> object containing text formatting settings.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.DrawString(System.Drawing.Graphics,System.String,System.Drawing.Rectangle,System.Drawing.StringFormat)">
            <summary>
                <para>Draws a text string at the specified location using the string format description.
</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object representing the current GDI+ drawing surface.

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value representing the name of the string to be drawn.

            </param>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing location.

            </param>
            <param name="strFormat">
		A <see cref="T:System.Drawing.StringFormat"/> object containing text format settings.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.DrawString(System.Drawing.Graphics,System.String,System.Drawing.Rectangle)">
            <summary>
                <para>Draws a text string at a specified location. 
</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object representing the current GDI+ drawing surface.

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value representing the name of the string to be drawn.

            </param>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing location.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.DrawString(System.Drawing.Graphics,System.String,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush)">
            <summary>
                <para>Draws a text string at the specified location using the specified font and brush.
</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object representing the current GDI+ drawing surface.

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value representing the name of the string to be drawn.

            </param>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing location.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object used for drawing a string.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object representing the brush used for text painting or texturing.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.DrawString(System.Drawing.Graphics,System.String,System.Drawing.Rectangle,System.Drawing.Brush)">
            <summary>
                <para>Draws a text string at the specified location using the specified brush.
</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object representing the current GDI+ drawing surface.

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value representing the name of the string to be drawn.

            </param>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing location.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object representing the brush used for text painting or texturing.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Brush)">
            <summary>
                <para>Draws a text string at the specified location using the brush specified.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object specifying the GDI+ drawing surface.

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value representing the text to be drawn.

            </param>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing location.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object representing the brush used for text painting or texturing.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.DrawString(DevExpress.Utils.Drawing.GraphicsCache,System.String,System.Drawing.Rectangle,System.Drawing.Brush,System.Drawing.StringFormat)">
            <summary>
                <para>Draws a text string at the specified location using the specified brush and string format description.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object specifying the GDI+ drawing surface.

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value representing the text to be drawn.

            </param>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing location.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object representing the brush used for text painting or texturing.

            </param>
            <param name="strFormat">
		A <see cref="T:System.Drawing.StringFormat"/> object containing text formatting settings.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.EndUpdate">
            <summary>
                <para>Prevents multiple firing of the <see cref="E:DevExpress.Utils.ViewStyle.Changed"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.FillRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
                <para>Fills a rectangle created at a specified location, using the <see cref="P:DevExpress.Utils.ViewStyle.BackBrush"/> property.
</para>
            </summary>
            <param name="g">
		A <B>Graphics</B> object representing the current GDI+ drawing surface.

            </param>
            <param name="r">
		A <B>Rectangle</B> value representing the drawing location. 

            </param>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.FillRectangle(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle)">
            <summary>
                <para>Fills a specified rectangle with the style brush.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.GraphicsCache"/> object providing access to pens and brushes used to paint.

            </param>
            <param name="rect">
		A <B>System.Drawing.Rectangle</B> structure specifying the rectangle to be filled.

            </param>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.Font">
            <summary>
                <para>Gets or sets the font for object contents.
</para>
            </summary>
            <value><B>System.Drawing.Font</B> object representng the font for object contents.
</value>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.ForeBrush">
            <summary>
                <para>Gets a value representing a brush used for painting the foreground.
</para>
            </summary>
            <value><B>System.Drawing.Brush</B> object used for painting the foreground.
</value>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.ForeColor">
            <summary>
                <para>Gets or sets the foreground color of a style.
</para>
            </summary>
            <value>A <B>Color</B> representing the foreground color of a style. 
</value>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.ForePen">
            <summary>
                <para>Gets a value representing a pen used for drawing in the foreground.
</para>
            </summary>
            <value><B>System.Drawing.Pen</B> object representing a pen for drawing in the foreground.
</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.GetBackBrush(DevExpress.Utils.Drawing.GraphicsCache,System.Drawing.Rectangle)">
            <summary>
                <para>Returns a background brush with specified settings.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.GraphicsCache"/> object providing access to pens and brushes used to paint.

            </param>
            <param name="rect">
		A <B>System.Drawing.Rectangle</B> object specifying the rectangle for which a brush is created.

            </param>
            <returns>A <B>System.Drawing.Brush</B> descendant specifying the background brush.
</returns>

        </member>
        <member name="E:DevExpress.Utils.ViewStyle.GetDefaultHorzAlignment">
            <summary>
                <para> [To be supplied] </para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.GetStyleHash">
            <summary>
                <para>Returns a string containing this object's settings.
</para>
            </summary>
            <returns>A string that contains this object's settings.
</returns>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.HAlignment">
            <summary>
                <para>Gets or sets the horizontal alignment of object contents.
</para>
            </summary>
            <value><see cref="T:DevExpress.Utils.HorzAlignment"/> enumerator value that specifies object content position. 

</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.HorzAlignmentToStringAlignment(DevExpress.Utils.HorzAlignment)">
            <summary>
                <para>Converts alignment of the <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration to the standard <b>StringAlignment</b> enumeration.
</para>
            </summary>
            <param name="horz">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value to be converted to the <b>StringAlignment</b> enumeration.

            </param>
            <returns>A value of the <b>StringAlignment</b> enumeration that corresponds to the alignment specified by the <i>horz</i> parameter.
</returns>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.Image">
            <summary>
                <para>Gets or sets the background image of the current style.
</para>
            </summary>
            <value><B>System.Drawing.Image</B> object representing the background image of the style.
</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.IsEqualTo(DevExpress.Utils.ViewStyle)">
            <summary>
                <para>Determines whether property values of a specified style equal the property values of the current style.
</para>
            </summary>
            <param name="vs">
		The <see cref="T:DevExpress.Utils.ViewStyle"/> object used for comparison.

            </param>
            <returns><B>true</B> if all property values of the specified style equal the specified style's property values, otherwise, <B>false</B>.
</returns>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.IsFieldsEqualTo(DevExpress.Utils.ViewStyle)">
            <summary>
                <para>Specifies whether the properties of the current <see cref="T:DevExpress.Utils.ViewStyle"/> object equal the properties of the <see cref="T:DevExpress.Utils.ViewStyle"/> object, specified via the parameter.
</para>
            </summary>
            <param name="vs">
		The name of the <see cref="T:DevExpress.Utils.ViewStyle"/> object, whose properties are compared to the properties of the current <see cref="T:DevExpress.Utils.ViewStyle"/> object.

            </param>
            <returns><B>true</B>, if the properties of the current style equal the properties of the style, specified via the parameter; otherwise, <B>false</B>.
</returns>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.Options">
            <summary>
                <para>Gets or sets the set of style options.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.StyleOptions"/> object containing options for the current style.
</value>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.ParentStyleName">
            <summary>
                <para>Gets or sets a value representing the name of the parent style for the current style.
</para>
            </summary>
            <value><see cref="T:System.String"/> value representing the name of the parent style for the current style.
</value>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.RealParent">
            <summary>
                <para>Gets the <see cref="T:DevExpress.Utils.ViewStyle"/> object whose name in the <see cref="T:DevExpress.Utils.ViewStyles"/> collection corresponds to the <see cref="P:DevExpress.Utils.ViewStyle.ParentStyleName"/> property of the current style.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.ViewStyle"/> object. 
</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.ReleaseResources">
            <summary>
                <para>Frees resources created via the <see cref="M:DevExpress.Utils.ViewStyle.CreateResources"/> method.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.Reset">
            <summary>
                <para>Restores default settings of the <see cref="T:DevExpress.Utils.ViewStyle"/> object.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.SetStyleAsInternal">
            <summary>
                <para> [To be supplied] </para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.StrFormat">
            <summary>
                <para>Gets the value representing text string format information.
</para>
            </summary>
            <value><B>System.Drawing.StringFormat</B> value representing text string format information.
</value>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.StyleCreator">
            <summary>
                <para>Gets a value representing the name of an object that uses the current style.
</para>
            </summary>
            <value>The name of an object that uses the style.
</value>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.StyleName">
            <summary>
                <para>Gets the value representing the style name.
</para>
            </summary>
            <value>The name of the style
</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.ToString">
            <summary>
                <para>Returns the string that represents the current style.
</para>
            </summary>
            <returns>A string representing the current style.
</returns>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.VAlignment">
            <summary>
                <para>Gets or sets the vertical alignment of object contents.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.VertAlignment"/> enumerator value that specifies object content position.
</value>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.VertAlignmentToStringAlignment(DevExpress.Utils.VertAlignment)">
            <summary>
                <para>Converts alignment of the <see cref="T:DevExpress.Utils.VertAlignment"/> enumeration to the standard <b>StringAlignment</b> enumeration.
</para>
            </summary>
            <param name="vert">
		A <see cref="T:DevExpress.Utils.VertAlignment"/> enumeration value to be converted to the <b>StringAlignment</b> enumeration.

            </param>
            <returns>A <b>StringAlignment</b> enumeration value that corresponds to the alignment specified by the <i>vert</i> parameter.
</returns>

        </member>
        <member name="P:DevExpress.Utils.ViewStyle.WordWrap">
            <summary>
                <para>Specifies whether soft carriage returns are inserted into object text.

</para>
            </summary>
            <value><b>true</b> if object text wraps at the right margin so it fits the client region, <b>false</b> if object text is displayed as a separate line only if the carriage return character was explicitly entered into the text. 
</value>

        </member>
        <member name="T:DevExpress.Utils.VertAlignment.VertAlignment">
            <summary>
                <para>Specifies the vertical alignment of an object or text in a control.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.VertAlignment.Bottom">
            <summary>
                <para>Places the text to the bottom of an object.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.VertAlignment.Center">
            <summary>
                <para>Centers the text within an object.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.VertAlignment.Default">
            <summary>
                <para>Places the text to its default position. The default position is in the center of an object.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.VertAlignment.Top">
            <summary>
                <para>Places the text to the top of an object.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Utils.StyleOptions.StyleOptions">
            <summary>
                <para>Contains the set of values that determine the manner in which style elements are used for the current editor.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.StyleOptions.None">
            <summary>
                <para> [To be supplied] </para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.StyleOptions.StyleEnabled">
            <summary>
                <para>If active, a specific style is enabled, otherwise it is disabled.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseBackColor">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property value of the current style is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseDrawEndEllipsis">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.DrawEndEllipsis"/> property value of the current style is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseDrawFocusRect">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.DrawFocusRect"/> property value of the current style is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseFont">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.Font"/> property value of the current style is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseForeColor">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property value of the current style is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseHorzAlignment">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property value of the current style  is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseImage">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.Image"/> property value of the current style is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseVertAlignment">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.VAlignment"/> property value of the current style is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseWordWrap">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.WordWrap"/> property value of the current style is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.XtraEditors.Controls.BorderSide.BorderSide">
            <summary>
                <para>Contains values specifying border sides.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.All">
            <summary>
                <para>All border sides are painted. Enabling this flag results in enabling the <B>Left</B>, <B>Top</B>, <B>Right</B> and <B>Bottom</B> flags and disabling the <B>None</B> flag.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.Bottom">
            <summary>
                <para>Bottom border side is painted.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.Left">
            <summary>
                <para>Left border side is painted.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.None">
            <summary>
                <para>None of border sides is painted. Enabling this option results in disabling all other options.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.Right">
            <summary>
                <para>Right border side is painted.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.Top">
            <summary>
                <para>Top border side is painted.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipControllerShowEventArgs">
            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Utils.ToolTipController.BeforeShow"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.#ctor(System.Windows.Forms.Control,System.Object)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> class and initializes the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> and <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> properties.
</para>
            </summary>
            <param name="control">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> class and initializes properties with default values
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.#ctor(System.Windows.Forms.Control,System.Object,System.String,DevExpress.Utils.ToolTipLocation,System.Boolean,System.Boolean,System.Int32,DevExpress.Utils.ToolTipIconType,DevExpress.Utils.ToolTipIconSize,System.Windows.Forms.ImageList,System.Int32)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> class and initializes its properties with the specified values.
</para>
            </summary>
            <param name="control">
		An object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		An object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>
            <param name="toolTip">
		A string to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTip"/> property.

            </param>
            <param name="toolTipLocation">
		A value to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipLocation"/> property.

            </param>
            <param name="showBeak">
		A value to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ShowBeak"/> property.

            </param>
            <param name="rounded">
		A value to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Rounded"/> property.

            </param>
            <param name="roundRadius">
		A value to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.RoundRadius"/> property.

            </param>
            <param name="iconType">
		A value to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconType"/> property.

            </param>
            <param name="iconSize">
		A value to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconSize"/> property.

            </param>
            <param name="imageList">
		An object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageList"/> property.

            </param>
            <param name="imageIndex">
		A value to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageIndex"/> property.

            </param>

        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.AutoHide">
            <summary>
                <para>Gets or sets whether the tooltip is hidden after a specific time ellapses.
</para>
            </summary>
            <value><b>true</b> if the tooltip is hidden after a specific time period ellapses; otherwise, <b>false</b>.
</value>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.Equals(System.Object)">
            <summary>
                <para>Determines whether two objects are equal.
</para>
            </summary>
            <param name="obj">
		The object specifying a <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> instance to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> instance.
</returns>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current object.
</para>
            </summary>
            <returns>The hash code for the current object.
</returns>

        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconSize">
            <summary>
                <para>Gets the size of the predefined icon to display in the tooltip.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipIconSize"/> value specifying the icon size.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconType">
            <summary>
                <para>Gets or sets the kind of predefined icons to display in the tooltip.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value specifying the kind of predefined icon to display.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageIndex">
            <summary>
                <para>Gets or sets the index of an image from the <see cref="P:DevExpress.Utils.ToolTipController.ImageList"/> to display in the tooltip.
</para>
            </summary>
            <value>The index of a custom image to display in the tooltip.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageList">
            <summary>
                <para>Gets or sets the list containing custom images for tooltips.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Forms.ImageList"/> object specifying the list of custom images.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Rounded">
            <summary>
                <para>Gets or sets whether the tooltip window has rounded corners.
</para>
            </summary>
            <value><b>true</b> if tooltip window's corners are rounded; otherwise, <b>false</b>.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.RoundRadius">
            <summary>
                <para>Gets or sets the radius of the rounded corners of the tooltip window.
</para>
            </summary>
            <value>The radius of the rounded corners.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Show">
            <summary>
                <para>Gets or sets whether the tooltip should be displayed.
</para>
            </summary>
            <value><b>true</b> if the tooltip should be displayed; otherwise, <b>false</b>.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ShowBeak">
            <summary>
                <para>Tests whether callout beaks are displayed for hints.
</para>
            </summary>
            <value><b>true</b> if the callout beak is displayed when a hint appears; otherwise, <b>false</b>
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTip">
            <summary>
                <para>Gets or sets the text for the tooltip.
</para>
            </summary>
            <value>The string representing the text to display in the tooltip.
</value>

        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipLocation">
            <summary>
                <para>Gets or sets the location of the tooltip window relative to the position where the tooltip should appear.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipLocation"/> value specifying the relative position of the tooltip window.
</value>

        </member>
    </members>
</doc>
