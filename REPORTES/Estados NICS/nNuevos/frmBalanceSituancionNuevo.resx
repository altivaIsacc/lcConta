<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PeriodoBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>200, 52</value>
  </metadata>
  <metadata name="DtsReportes.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>120, 17</value>
  </metadata>
  <metadata name="PeriodoFiscalBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>351, 15</value>
  </metadata>
  <metadata name="getBalance.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="cmdGetBalance.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>223, 15</value>
  </metadata>
  <metadata name="PeriodoFiscalTableAdapter.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>538, 15</value>
  </metadata>
  <metadata name="DtsReportesBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 52</value>
  </metadata>
  <metadata name="PeriodoTableAdapter.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>360, 52</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>