'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dtsSetting"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dtsSetting
    Inherits Global.System.Data.DataSet
    
    Private tableSettingCuentaContable As SettingCuentaContableDataTable
    
    Private tabledtCuentaContable As dtCuentaContableDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SettingCuentaContable")) Is Nothing) Then
                MyBase.Tables.Add(New SettingCuentaContableDataTable(ds.Tables("SettingCuentaContable")))
            End If
            If (Not (ds.Tables("dtCuentaContable")) Is Nothing) Then
                MyBase.Tables.Add(New dtCuentaContableDataTable(ds.Tables("dtCuentaContable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SettingCuentaContable() As SettingCuentaContableDataTable
        Get
            Return Me.tableSettingCuentaContable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtCuentaContable() As dtCuentaContableDataTable
        Get
            Return Me.tabledtCuentaContable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dtsSetting = CType(MyBase.Clone,dtsSetting)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("SettingCuentaContable")) Is Nothing) Then
                MyBase.Tables.Add(New SettingCuentaContableDataTable(ds.Tables("SettingCuentaContable")))
            End If
            If (Not (ds.Tables("dtCuentaContable")) Is Nothing) Then
                MyBase.Tables.Add(New dtCuentaContableDataTable(ds.Tables("dtCuentaContable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSettingCuentaContable = CType(MyBase.Tables("SettingCuentaContable"),SettingCuentaContableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSettingCuentaContable) Is Nothing) Then
                Me.tableSettingCuentaContable.InitVars
            End If
        End If
        Me.tabledtCuentaContable = CType(MyBase.Tables("dtCuentaContable"),dtCuentaContableDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtCuentaContable) Is Nothing) Then
                Me.tabledtCuentaContable.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dtsSetting"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dtsSetting.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSettingCuentaContable = New SettingCuentaContableDataTable()
        MyBase.Tables.Add(Me.tableSettingCuentaContable)
        Me.tabledtCuentaContable = New dtCuentaContableDataTable()
        MyBase.Tables.Add(Me.tabledtCuentaContable)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeSettingCuentaContable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializedtCuentaContable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dtsSetting = New dtsSetting()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub SettingCuentaContableRowChangeEventHandler(ByVal sender As Object, ByVal e As SettingCuentaContableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub dtCuentaContableRowChangeEventHandler(ByVal sender As Object, ByVal e As dtCuentaContableRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SettingCuentaContableDataTable
        Inherits Global.System.Data.TypedTableBase(Of SettingCuentaContableRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnIdImpuestoVenta As Global.System.Data.DataColumn
        
        Private columnIdCuentaCobrar As Global.System.Data.DataColumn
        
        Private columnIdCompraGrabado As Global.System.Data.DataColumn
        
        Private columnIdCompraExcento As Global.System.Data.DataColumn
        
        Private columnIdRenta As Global.System.Data.DataColumn
        
        Private columnIdCXCEmpCol As Global.System.Data.DataColumn
        
        Private columnIdCXCEmpDol As Global.System.Data.DataColumn
        
        Private columnIdDiferencial As Global.System.Data.DataColumn
        
        Private columnIdDiferencialGasto As Global.System.Data.DataColumn
        
        Private columnIdPeriodo As Global.System.Data.DataColumn
        
        Private columnIdCxCHabitacion As Global.System.Data.DataColumn
        
        Private columnIdDiferenciaCaja As Global.System.Data.DataColumn
        
        Private columnIdICT As Global.System.Data.DataColumn
        
        Private columnIdServicio As Global.System.Data.DataColumn
        
        Private columnIdTravelCheck As Global.System.Data.DataColumn
        
        Private columnMontoAdelanto As Global.System.Data.DataColumn
        
        Private columnIdCaja As Global.System.Data.DataColumn
        
        Private columnIdPropina As Global.System.Data.DataColumn
        
        Private columnIdTCXC As Global.System.Data.DataColumn
        
        Private columnIdPrepagoCol As Global.System.Data.DataColumn
        
        Private columnIdPrepagoDol As Global.System.Data.DataColumn
        
        Private columnIdOtrosIng As Global.System.Data.DataColumn
        
        Private columnIdInteresPres As Global.System.Data.DataColumn
        
        Private columnIdCostoVPrep As Global.System.Data.DataColumn
        
        Private columnIdCostoV As Global.System.Data.DataColumn
        
        Private columnIdVE As Global.System.Data.DataColumn
        
        Private columnIdVL As Global.System.Data.DataColumn
        
        Private columnIdComi As Global.System.Data.DataColumn
        
        Private columnIdComDep As Global.System.Data.DataColumn
        
        Private columnIdCreditoCompras As Global.System.Data.DataColumn
        
        Private columnIdIngresoAjCXCMenor As Global.System.Data.DataColumn
        
        Private columnIdPerdidaAjCXCMenor As Global.System.Data.DataColumn
        
        Private columnIdCreditoComp As Global.System.Data.DataColumn
        
        Private columnIdCuentaPorCobrarD As Global.System.Data.DataColumn
        
        Private columnIdImpuestoRenta As Global.System.Data.DataColumn
        
        Private columnPorcImpuestoRenta As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SettingCuentaContable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdImpuestoVentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdImpuestoVenta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdCuentaCobrarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCuentaCobrar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdCompraGrabadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCompraGrabado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdCompraExcentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCompraExcento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdRentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdRenta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdCXCEmpColColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCXCEmpCol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdCXCEmpDolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCXCEmpDol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdDiferencialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDiferencial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdDiferencialGastoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDiferencialGasto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdPeriodoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdPeriodo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdCxCHabitacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCxCHabitacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdDiferenciaCajaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDiferenciaCaja
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdICTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdICT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdServicioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdServicio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdTravelCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdTravelCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MontoAdelantoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMontoAdelanto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdCajaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCaja
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdPropinaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdPropina
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdTCXCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdTCXC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdPrepagoColColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdPrepagoCol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdPrepagoDolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdPrepagoDol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdOtrosIngColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdOtrosIng
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdInteresPresColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdInteresPres
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdCostoVPrepColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCostoVPrep
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdCostoVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCostoV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdVEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdVLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdVL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdComiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdComi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdComDepColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdComDep
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdCreditoComprasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCreditoCompras
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdIngresoAjCXCMenorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdIngresoAjCXCMenor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdPerdidaAjCXCMenorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdPerdidaAjCXCMenor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdCreditoCompColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCreditoComp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdCuentaPorCobrarDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCuentaPorCobrarD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdImpuestoRentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdImpuestoRenta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PorcImpuestoRentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcImpuestoRenta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SettingCuentaContableRow
            Get
                Return CType(Me.Rows(index),SettingCuentaContableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SettingCuentaContableRowChanging As SettingCuentaContableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SettingCuentaContableRowChanged As SettingCuentaContableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SettingCuentaContableRowDeleting As SettingCuentaContableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SettingCuentaContableRowDeleted As SettingCuentaContableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddSettingCuentaContableRow(ByVal row As SettingCuentaContableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddSettingCuentaContableRow( _
                    ByVal IdImpuestoVenta As Integer,  _
                    ByVal IdCuentaCobrar As Integer,  _
                    ByVal IdCompraGrabado As Integer,  _
                    ByVal IdCompraExcento As Integer,  _
                    ByVal IdRenta As Integer,  _
                    ByVal IdCXCEmpCol As Integer,  _
                    ByVal IdCXCEmpDol As Integer,  _
                    ByVal IdDiferencial As Integer,  _
                    ByVal IdDiferencialGasto As Integer,  _
                    ByVal IdPeriodo As Integer,  _
                    ByVal IdCxCHabitacion As Integer,  _
                    ByVal IdDiferenciaCaja As Integer,  _
                    ByVal IdICT As Integer,  _
                    ByVal IdServicio As Integer,  _
                    ByVal IdTravelCheck As Integer,  _
                    ByVal MontoAdelanto As Double,  _
                    ByVal IdCaja As Integer,  _
                    ByVal IdPropina As Integer,  _
                    ByVal IdTCXC As Integer,  _
                    ByVal IdPrepagoCol As Integer,  _
                    ByVal IdPrepagoDol As Integer,  _
                    ByVal IdOtrosIng As Integer,  _
                    ByVal IdInteresPres As Integer,  _
                    ByVal IdCostoVPrep As Integer,  _
                    ByVal IdCostoV As Integer,  _
                    ByVal IdVE As Integer,  _
                    ByVal IdVL As Integer,  _
                    ByVal IdComi As Integer,  _
                    ByVal IdComDep As Integer,  _
                    ByVal IdCreditoCompras As Integer,  _
                    ByVal IdIngresoAjCXCMenor As Integer,  _
                    ByVal IdPerdidaAjCXCMenor As Integer,  _
                    ByVal IdCreditoComp As Integer,  _
                    ByVal IdCuentaPorCobrarD As Integer,  _
                    ByVal IdImpuestoRenta As Integer,  _
                    ByVal PorcImpuestoRenta As Double) As SettingCuentaContableRow
            Dim rowSettingCuentaContableRow As SettingCuentaContableRow = CType(Me.NewRow,SettingCuentaContableRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, IdImpuestoVenta, IdCuentaCobrar, IdCompraGrabado, IdCompraExcento, IdRenta, IdCXCEmpCol, IdCXCEmpDol, IdDiferencial, IdDiferencialGasto, IdPeriodo, IdCxCHabitacion, IdDiferenciaCaja, IdICT, IdServicio, IdTravelCheck, MontoAdelanto, IdCaja, IdPropina, IdTCXC, IdPrepagoCol, IdPrepagoDol, IdOtrosIng, IdInteresPres, IdCostoVPrep, IdCostoV, IdVE, IdVL, IdComi, IdComDep, IdCreditoCompras, IdIngresoAjCXCMenor, IdPerdidaAjCXCMenor, IdCreditoComp, IdCuentaPorCobrarD, IdImpuestoRenta, PorcImpuestoRenta}
            rowSettingCuentaContableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSettingCuentaContableRow)
            Return rowSettingCuentaContableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByid(ByVal id As Integer) As SettingCuentaContableRow
            Return CType(Me.Rows.Find(New Object() {id}),SettingCuentaContableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SettingCuentaContableDataTable = CType(MyBase.Clone,SettingCuentaContableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SettingCuentaContableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnIdImpuestoVenta = MyBase.Columns("IdImpuestoVenta")
            Me.columnIdCuentaCobrar = MyBase.Columns("IdCuentaCobrar")
            Me.columnIdCompraGrabado = MyBase.Columns("IdCompraGrabado")
            Me.columnIdCompraExcento = MyBase.Columns("IdCompraExcento")
            Me.columnIdRenta = MyBase.Columns("IdRenta")
            Me.columnIdCXCEmpCol = MyBase.Columns("IdCXCEmpCol")
            Me.columnIdCXCEmpDol = MyBase.Columns("IdCXCEmpDol")
            Me.columnIdDiferencial = MyBase.Columns("IdDiferencial")
            Me.columnIdDiferencialGasto = MyBase.Columns("IdDiferencialGasto")
            Me.columnIdPeriodo = MyBase.Columns("IdPeriodo")
            Me.columnIdCxCHabitacion = MyBase.Columns("IdCxCHabitacion")
            Me.columnIdDiferenciaCaja = MyBase.Columns("IdDiferenciaCaja")
            Me.columnIdICT = MyBase.Columns("IdICT")
            Me.columnIdServicio = MyBase.Columns("IdServicio")
            Me.columnIdTravelCheck = MyBase.Columns("IdTravelCheck")
            Me.columnMontoAdelanto = MyBase.Columns("MontoAdelanto")
            Me.columnIdCaja = MyBase.Columns("IdCaja")
            Me.columnIdPropina = MyBase.Columns("IdPropina")
            Me.columnIdTCXC = MyBase.Columns("IdTCXC")
            Me.columnIdPrepagoCol = MyBase.Columns("IdPrepagoCol")
            Me.columnIdPrepagoDol = MyBase.Columns("IdPrepagoDol")
            Me.columnIdOtrosIng = MyBase.Columns("IdOtrosIng")
            Me.columnIdInteresPres = MyBase.Columns("IdInteresPres")
            Me.columnIdCostoVPrep = MyBase.Columns("IdCostoVPrep")
            Me.columnIdCostoV = MyBase.Columns("IdCostoV")
            Me.columnIdVE = MyBase.Columns("IdVE")
            Me.columnIdVL = MyBase.Columns("IdVL")
            Me.columnIdComi = MyBase.Columns("IdComi")
            Me.columnIdComDep = MyBase.Columns("IdComDep")
            Me.columnIdCreditoCompras = MyBase.Columns("IdCreditoCompras")
            Me.columnIdIngresoAjCXCMenor = MyBase.Columns("IdIngresoAjCXCMenor")
            Me.columnIdPerdidaAjCXCMenor = MyBase.Columns("IdPerdidaAjCXCMenor")
            Me.columnIdCreditoComp = MyBase.Columns("IdCreditoComp")
            Me.columnIdCuentaPorCobrarD = MyBase.Columns("IdCuentaPorCobrarD")
            Me.columnIdImpuestoRenta = MyBase.Columns("IdImpuestoRenta")
            Me.columnPorcImpuestoRenta = MyBase.Columns("PorcImpuestoRenta")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnIdImpuestoVenta = New Global.System.Data.DataColumn("IdImpuestoVenta", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdImpuestoVenta)
            Me.columnIdCuentaCobrar = New Global.System.Data.DataColumn("IdCuentaCobrar", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCuentaCobrar)
            Me.columnIdCompraGrabado = New Global.System.Data.DataColumn("IdCompraGrabado", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCompraGrabado)
            Me.columnIdCompraExcento = New Global.System.Data.DataColumn("IdCompraExcento", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCompraExcento)
            Me.columnIdRenta = New Global.System.Data.DataColumn("IdRenta", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdRenta)
            Me.columnIdCXCEmpCol = New Global.System.Data.DataColumn("IdCXCEmpCol", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCXCEmpCol)
            Me.columnIdCXCEmpDol = New Global.System.Data.DataColumn("IdCXCEmpDol", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCXCEmpDol)
            Me.columnIdDiferencial = New Global.System.Data.DataColumn("IdDiferencial", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDiferencial)
            Me.columnIdDiferencialGasto = New Global.System.Data.DataColumn("IdDiferencialGasto", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDiferencialGasto)
            Me.columnIdPeriodo = New Global.System.Data.DataColumn("IdPeriodo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdPeriodo)
            Me.columnIdCxCHabitacion = New Global.System.Data.DataColumn("IdCxCHabitacion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCxCHabitacion)
            Me.columnIdDiferenciaCaja = New Global.System.Data.DataColumn("IdDiferenciaCaja", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDiferenciaCaja)
            Me.columnIdICT = New Global.System.Data.DataColumn("IdICT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdICT)
            Me.columnIdServicio = New Global.System.Data.DataColumn("IdServicio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdServicio)
            Me.columnIdTravelCheck = New Global.System.Data.DataColumn("IdTravelCheck", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdTravelCheck)
            Me.columnMontoAdelanto = New Global.System.Data.DataColumn("MontoAdelanto", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMontoAdelanto)
            Me.columnIdCaja = New Global.System.Data.DataColumn("IdCaja", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCaja)
            Me.columnIdPropina = New Global.System.Data.DataColumn("IdPropina", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdPropina)
            Me.columnIdTCXC = New Global.System.Data.DataColumn("IdTCXC", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdTCXC)
            Me.columnIdPrepagoCol = New Global.System.Data.DataColumn("IdPrepagoCol", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdPrepagoCol)
            Me.columnIdPrepagoDol = New Global.System.Data.DataColumn("IdPrepagoDol", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdPrepagoDol)
            Me.columnIdOtrosIng = New Global.System.Data.DataColumn("IdOtrosIng", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdOtrosIng)
            Me.columnIdInteresPres = New Global.System.Data.DataColumn("IdInteresPres", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdInteresPres)
            Me.columnIdCostoVPrep = New Global.System.Data.DataColumn("IdCostoVPrep", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCostoVPrep)
            Me.columnIdCostoV = New Global.System.Data.DataColumn("IdCostoV", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCostoV)
            Me.columnIdVE = New Global.System.Data.DataColumn("IdVE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdVE)
            Me.columnIdVL = New Global.System.Data.DataColumn("IdVL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdVL)
            Me.columnIdComi = New Global.System.Data.DataColumn("IdComi", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdComi)
            Me.columnIdComDep = New Global.System.Data.DataColumn("IdComDep", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdComDep)
            Me.columnIdCreditoCompras = New Global.System.Data.DataColumn("IdCreditoCompras", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCreditoCompras)
            Me.columnIdIngresoAjCXCMenor = New Global.System.Data.DataColumn("IdIngresoAjCXCMenor", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdIngresoAjCXCMenor)
            Me.columnIdPerdidaAjCXCMenor = New Global.System.Data.DataColumn("IdPerdidaAjCXCMenor", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdPerdidaAjCXCMenor)
            Me.columnIdCreditoComp = New Global.System.Data.DataColumn("IdCreditoComp", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCreditoComp)
            Me.columnIdCuentaPorCobrarD = New Global.System.Data.DataColumn("IdCuentaPorCobrarD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCuentaPorCobrarD)
            Me.columnIdImpuestoRenta = New Global.System.Data.DataColumn("IdImpuestoRenta", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdImpuestoRenta)
            Me.columnPorcImpuestoRenta = New Global.System.Data.DataColumn("PorcImpuestoRenta", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcImpuestoRenta)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnIdImpuestoVenta.AllowDBNull = false
            Me.columnIdCuentaCobrar.AllowDBNull = false
            Me.columnIdCompraGrabado.AllowDBNull = false
            Me.columnIdCompraExcento.AllowDBNull = false
            Me.columnIdRenta.AllowDBNull = false
            Me.columnIdCXCEmpCol.AllowDBNull = false
            Me.columnIdCXCEmpDol.AllowDBNull = false
            Me.columnIdDiferencial.AllowDBNull = false
            Me.columnIdDiferencialGasto.AllowDBNull = false
            Me.columnIdPeriodo.AllowDBNull = false
            Me.columnIdCxCHabitacion.AllowDBNull = false
            Me.columnIdDiferenciaCaja.AllowDBNull = false
            Me.columnIdICT.AllowDBNull = false
            Me.columnIdServicio.AllowDBNull = false
            Me.columnIdTravelCheck.AllowDBNull = false
            Me.columnMontoAdelanto.AllowDBNull = false
            Me.columnIdCaja.AllowDBNull = false
            Me.columnIdPropina.AllowDBNull = false
            Me.columnIdTCXC.AllowDBNull = false
            Me.columnIdPrepagoCol.AllowDBNull = false
            Me.columnIdPrepagoDol.AllowDBNull = false
            Me.columnIdOtrosIng.AllowDBNull = false
            Me.columnIdInteresPres.AllowDBNull = false
            Me.columnIdCostoVPrep.AllowDBNull = false
            Me.columnIdCostoV.AllowDBNull = false
            Me.columnIdVE.AllowDBNull = false
            Me.columnIdVL.AllowDBNull = false
            Me.columnIdComi.AllowDBNull = false
            Me.columnIdComDep.AllowDBNull = false
            Me.columnIdCreditoCompras.AllowDBNull = false
            Me.columnIdIngresoAjCXCMenor.AllowDBNull = false
            Me.columnIdPerdidaAjCXCMenor.AllowDBNull = false
            Me.columnIdCreditoComp.AllowDBNull = false
            Me.columnIdCuentaPorCobrarD.AllowDBNull = false
            Me.columnIdImpuestoRenta.AllowDBNull = false
            Me.columnPorcImpuestoRenta.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewSettingCuentaContableRow() As SettingCuentaContableRow
            Return CType(Me.NewRow,SettingCuentaContableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SettingCuentaContableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SettingCuentaContableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SettingCuentaContableRowChangedEvent) Is Nothing) Then
                RaiseEvent SettingCuentaContableRowChanged(Me, New SettingCuentaContableRowChangeEvent(CType(e.Row,SettingCuentaContableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SettingCuentaContableRowChangingEvent) Is Nothing) Then
                RaiseEvent SettingCuentaContableRowChanging(Me, New SettingCuentaContableRowChangeEvent(CType(e.Row,SettingCuentaContableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SettingCuentaContableRowDeletedEvent) Is Nothing) Then
                RaiseEvent SettingCuentaContableRowDeleted(Me, New SettingCuentaContableRowChangeEvent(CType(e.Row,SettingCuentaContableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SettingCuentaContableRowDeletingEvent) Is Nothing) Then
                RaiseEvent SettingCuentaContableRowDeleting(Me, New SettingCuentaContableRowChangeEvent(CType(e.Row,SettingCuentaContableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveSettingCuentaContableRow(ByVal row As SettingCuentaContableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dtsSetting = New dtsSetting()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SettingCuentaContableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtCuentaContableDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtCuentaContableRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnDescripción As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtCuentaContable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DescripciónColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripción
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtCuentaContableRow
            Get
                Return CType(Me.Rows(index),dtCuentaContableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtCuentaContableRowChanging As dtCuentaContableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtCuentaContableRowChanged As dtCuentaContableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtCuentaContableRowDeleting As dtCuentaContableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtCuentaContableRowDeleted As dtCuentaContableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AdddtCuentaContableRow(ByVal row As dtCuentaContableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AdddtCuentaContableRow(ByVal Id As Integer, ByVal Descripción As String) As dtCuentaContableRow
            Dim rowdtCuentaContableRow As dtCuentaContableRow = CType(Me.NewRow,dtCuentaContableRow)
            Dim columnValuesArray() As Object = New Object() {Id, Descripción}
            rowdtCuentaContableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtCuentaContableRow)
            Return rowdtCuentaContableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtCuentaContableDataTable = CType(MyBase.Clone,dtCuentaContableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtCuentaContableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnDescripción = MyBase.Columns("Descripción")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnDescripción = New Global.System.Data.DataColumn("Descripción", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripción)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewdtCuentaContableRow() As dtCuentaContableRow
            Return CType(Me.NewRow,dtCuentaContableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtCuentaContableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtCuentaContableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtCuentaContableRowChangedEvent) Is Nothing) Then
                RaiseEvent dtCuentaContableRowChanged(Me, New dtCuentaContableRowChangeEvent(CType(e.Row,dtCuentaContableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtCuentaContableRowChangingEvent) Is Nothing) Then
                RaiseEvent dtCuentaContableRowChanging(Me, New dtCuentaContableRowChangeEvent(CType(e.Row,dtCuentaContableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtCuentaContableRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtCuentaContableRowDeleted(Me, New dtCuentaContableRowChangeEvent(CType(e.Row,dtCuentaContableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtCuentaContableRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtCuentaContableRowDeleting(Me, New dtCuentaContableRowChangeEvent(CType(e.Row,dtCuentaContableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovedtCuentaContableRow(ByVal row As dtCuentaContableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dtsSetting = New dtsSetting()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtCuentaContableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SettingCuentaContableRow
        Inherits Global.System.Data.DataRow
        
        Private tableSettingCuentaContable As SettingCuentaContableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSettingCuentaContable = CType(Me.Table,SettingCuentaContableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.idColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdImpuestoVenta() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdImpuestoVentaColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdImpuestoVentaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdCuentaCobrar() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdCuentaCobrarColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdCuentaCobrarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdCompraGrabado() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdCompraGrabadoColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdCompraGrabadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdCompraExcento() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdCompraExcentoColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdCompraExcentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdRenta() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdRentaColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdRentaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdCXCEmpCol() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdCXCEmpColColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdCXCEmpColColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdCXCEmpDol() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdCXCEmpDolColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdCXCEmpDolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdDiferencial() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdDiferencialColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdDiferencialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdDiferencialGasto() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdDiferencialGastoColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdDiferencialGastoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdPeriodo() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdPeriodoColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdPeriodoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdCxCHabitacion() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdCxCHabitacionColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdCxCHabitacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdDiferenciaCaja() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdDiferenciaCajaColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdDiferenciaCajaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdICT() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdICTColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdICTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdServicio() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdServicioColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdServicioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdTravelCheck() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdTravelCheckColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdTravelCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MontoAdelanto() As Double
            Get
                Return CType(Me(Me.tableSettingCuentaContable.MontoAdelantoColumn),Double)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.MontoAdelantoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdCaja() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdCajaColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdCajaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdPropina() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdPropinaColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdPropinaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdTCXC() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdTCXCColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdTCXCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdPrepagoCol() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdPrepagoColColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdPrepagoColColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdPrepagoDol() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdPrepagoDolColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdPrepagoDolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdOtrosIng() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdOtrosIngColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdOtrosIngColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdInteresPres() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdInteresPresColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdInteresPresColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdCostoVPrep() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdCostoVPrepColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdCostoVPrepColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdCostoV() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdCostoVColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdCostoVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdVE() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdVEColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdVEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdVL() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdVLColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdVLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdComi() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdComiColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdComiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdComDep() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdComDepColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdComDepColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdCreditoCompras() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdCreditoComprasColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdCreditoComprasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdIngresoAjCXCMenor() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdIngresoAjCXCMenorColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdIngresoAjCXCMenorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdPerdidaAjCXCMenor() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdPerdidaAjCXCMenorColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdPerdidaAjCXCMenorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdCreditoComp() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdCreditoCompColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdCreditoCompColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdCuentaPorCobrarD() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdCuentaPorCobrarDColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdCuentaPorCobrarDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdImpuestoRenta() As Integer
            Get
                Return CType(Me(Me.tableSettingCuentaContable.IdImpuestoRentaColumn),Integer)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.IdImpuestoRentaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PorcImpuestoRenta() As Double
            Get
                Return CType(Me(Me.tableSettingCuentaContable.PorcImpuestoRentaColumn),Double)
            End Get
            Set
                Me(Me.tableSettingCuentaContable.PorcImpuestoRentaColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtCuentaContableRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtCuentaContable As dtCuentaContableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtCuentaContable = CType(Me.Table,dtCuentaContableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtCuentaContable.IdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Id' de la tabla 'dtCuentaContable' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtCuentaContable.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Descripción() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtCuentaContable.DescripciónColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Descripción' de la tabla 'dtCuentaContable' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtCuentaContable.DescripciónColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdNull() As Boolean
            Return Me.IsNull(Me.tabledtCuentaContable.IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdNull()
            Me(Me.tabledtCuentaContable.IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDescripciónNull() As Boolean
            Return Me.IsNull(Me.tabledtCuentaContable.DescripciónColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDescripciónNull()
            Me(Me.tabledtCuentaContable.DescripciónColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class SettingCuentaContableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SettingCuentaContableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As SettingCuentaContableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As SettingCuentaContableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class dtCuentaContableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtCuentaContableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As dtCuentaContableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As dtCuentaContableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dtsSettingTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SettingCuentaContableTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SettingCuentaContable"
            tableMapping.ColumnMappings.Add("id", "id")
            tableMapping.ColumnMappings.Add("IdImpuestoVenta", "IdImpuestoVenta")
            tableMapping.ColumnMappings.Add("IdCuentaCobrar", "IdCuentaCobrar")
            tableMapping.ColumnMappings.Add("IdCompraGrabado", "IdCompraGrabado")
            tableMapping.ColumnMappings.Add("IdCompraExcento", "IdCompraExcento")
            tableMapping.ColumnMappings.Add("IdRenta", "IdRenta")
            tableMapping.ColumnMappings.Add("IdCXCEmpCol", "IdCXCEmpCol")
            tableMapping.ColumnMappings.Add("IdCXCEmpDol", "IdCXCEmpDol")
            tableMapping.ColumnMappings.Add("IdDiferencial", "IdDiferencial")
            tableMapping.ColumnMappings.Add("IdDiferencialGasto", "IdDiferencialGasto")
            tableMapping.ColumnMappings.Add("IdPeriodo", "IdPeriodo")
            tableMapping.ColumnMappings.Add("IdCxCHabitacion", "IdCxCHabitacion")
            tableMapping.ColumnMappings.Add("IdDiferenciaCaja", "IdDiferenciaCaja")
            tableMapping.ColumnMappings.Add("IdICT", "IdICT")
            tableMapping.ColumnMappings.Add("IdServicio", "IdServicio")
            tableMapping.ColumnMappings.Add("IdTravelCheck", "IdTravelCheck")
            tableMapping.ColumnMappings.Add("MontoAdelanto", "MontoAdelanto")
            tableMapping.ColumnMappings.Add("IdCaja", "IdCaja")
            tableMapping.ColumnMappings.Add("IdPropina", "IdPropina")
            tableMapping.ColumnMappings.Add("IdTCXC", "IdTCXC")
            tableMapping.ColumnMappings.Add("IdPrepagoCol", "IdPrepagoCol")
            tableMapping.ColumnMappings.Add("IdPrepagoDol", "IdPrepagoDol")
            tableMapping.ColumnMappings.Add("IdOtrosIng", "IdOtrosIng")
            tableMapping.ColumnMappings.Add("IdInteresPres", "IdInteresPres")
            tableMapping.ColumnMappings.Add("IdCostoVPrep", "IdCostoVPrep")
            tableMapping.ColumnMappings.Add("IdCostoV", "IdCostoV")
            tableMapping.ColumnMappings.Add("IdVE", "IdVE")
            tableMapping.ColumnMappings.Add("IdVL", "IdVL")
            tableMapping.ColumnMappings.Add("IdComi", "IdComi")
            tableMapping.ColumnMappings.Add("IdComDep", "IdComDep")
            tableMapping.ColumnMappings.Add("IdCreditoCompras", "IdCreditoCompras")
            tableMapping.ColumnMappings.Add("IdIngresoAjCXCMenor", "IdIngresoAjCXCMenor")
            tableMapping.ColumnMappings.Add("IdPerdidaAjCXCMenor", "IdPerdidaAjCXCMenor")
            tableMapping.ColumnMappings.Add("IdCreditoComp", "IdCreditoComp")
            tableMapping.ColumnMappings.Add("IdCuentaPorCobrarD", "IdCuentaPorCobrarD")
            tableMapping.ColumnMappings.Add("IdImpuestoRenta", "IdImpuestoRenta")
            tableMapping.ColumnMappings.Add("PorcImpuestoRenta", "PorcImpuestoRenta")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [SettingCuentaContable] WHERE (([id] = @Original_id) AND ([IdImpuesto"& _ 
                "Venta] = @Original_IdImpuestoVenta) AND ([IdCuentaCobrar] = @Original_IdCuentaCo"& _ 
                "brar) AND ([IdCompraGrabado] = @Original_IdCompraGrabado) AND ([IdCompraExcento]"& _ 
                " = @Original_IdCompraExcento) AND ([IdRenta] = @Original_IdRenta) AND ([IdCXCEmp"& _ 
                "Col] = @Original_IdCXCEmpCol) AND ([IdCXCEmpDol] = @Original_IdCXCEmpDol) AND (["& _ 
                "IdDiferencial] = @Original_IdDiferencial) AND ([IdDiferencialGasto] = @Original_"& _ 
                "IdDiferencialGasto) AND ([IdPeriodo] = @Original_IdPeriodo) AND ([IdCxCHabitacio"& _ 
                "n] = @Original_IdCxCHabitacion) AND ([IdDiferenciaCaja] = @Original_IdDiferencia"& _ 
                "Caja) AND ([IdICT] = @Original_IdICT) AND ([IdServicio] = @Original_IdServicio) "& _ 
                "AND ([IdTravelCheck] = @Original_IdTravelCheck) AND ([MontoAdelanto] = @Original"& _ 
                "_MontoAdelanto) AND ([IdCaja] = @Original_IdCaja) AND ([IdPropina] = @Original_I"& _ 
                "dPropina) AND ([IdTCXC] = @Original_IdTCXC) AND ([IdPrepagoCol] = @Original_IdPr"& _ 
                "epagoCol) AND ([IdPrepagoDol] = @Original_IdPrepagoDol) AND ([IdOtrosIng] = @Ori"& _ 
                "ginal_IdOtrosIng) AND ([IdInteresPres] = @Original_IdInteresPres) AND ([IdCostoV"& _ 
                "Prep] = @Original_IdCostoVPrep) AND ([IdCostoV] = @Original_IdCostoV) AND ([IdVE"& _ 
                "] = @Original_IdVE) AND ([IdVL] = @Original_IdVL) AND ([IdComi] = @Original_IdCo"& _ 
                "mi) AND ([IdComDep] = @Original_IdComDep) AND ([IdCreditoCompras] = @Original_Id"& _ 
                "CreditoCompras) AND ([IdIngresoAjCXCMenor] = @Original_IdIngresoAjCXCMenor) AND "& _ 
                "([IdPerdidaAjCXCMenor] = @Original_IdPerdidaAjCXCMenor) AND ([IdCreditoComp] = @"& _ 
                "Original_IdCreditoComp) AND ([IdCuentaPorCobrarD] = @Original_IdCuentaPorCobrarD"& _ 
                ") AND ([IdImpuestoRenta] = @Original_IdImpuestoRenta) AND ([PorcImpuestoRenta] ="& _ 
                " @Original_PorcImpuestoRenta))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdImpuestoVenta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdImpuestoVenta", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCuentaCobrar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCuentaCobrar", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCompraGrabado", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCompraGrabado", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCompraExcento", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCompraExcento", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdRenta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdRenta", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCXCEmpCol", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCXCEmpCol", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCXCEmpDol", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCXCEmpDol", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDiferencial", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDiferencial", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDiferencialGasto", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDiferencialGasto", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdPeriodo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPeriodo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCxCHabitacion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCxCHabitacion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDiferenciaCaja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDiferenciaCaja", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdICT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdICT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdServicio", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdServicio", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdTravelCheck", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdTravelCheck", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MontoAdelanto", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MontoAdelanto", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCaja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCaja", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdPropina", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPropina", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdTCXC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdTCXC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdPrepagoCol", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPrepagoCol", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdPrepagoDol", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPrepagoDol", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdOtrosIng", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdOtrosIng", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdInteresPres", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdInteresPres", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCostoVPrep", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCostoVPrep", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCostoV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCostoV", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdVE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdVE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdVL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdVL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdComi", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdComi", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdComDep", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdComDep", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCreditoCompras", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCreditoCompras", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdIngresoAjCXCMenor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdIngresoAjCXCMenor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdPerdidaAjCXCMenor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPerdidaAjCXCMenor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCreditoComp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCreditoComp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCuentaPorCobrarD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCuentaPorCobrarD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdImpuestoRenta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdImpuestoRenta", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PorcImpuestoRenta", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PorcImpuestoRenta", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [SettingCuentaContable] ([IdImpuestoVenta], [IdCuentaCobrar], [IdComp"& _ 
                "raGrabado], [IdCompraExcento], [IdRenta], [IdCXCEmpCol], [IdCXCEmpDol], [IdDifer"& _ 
                "encial], [IdDiferencialGasto], [IdPeriodo], [IdCxCHabitacion], [IdDiferenciaCaja"& _ 
                "], [IdICT], [IdServicio], [IdTravelCheck], [MontoAdelanto], [IdCaja], [IdPropina"& _ 
                "], [IdTCXC], [IdPrepagoCol], [IdPrepagoDol], [IdOtrosIng], [IdInteresPres], [IdC"& _ 
                "ostoVPrep], [IdCostoV], [IdVE], [IdVL], [IdComi], [IdComDep], [IdCreditoCompras]"& _ 
                ", [IdIngresoAjCXCMenor], [IdPerdidaAjCXCMenor], [IdCreditoComp], [IdCuentaPorCob"& _ 
                "rarD], [IdImpuestoRenta], [PorcImpuestoRenta]) VALUES (@IdImpuestoVenta, @IdCuen"& _ 
                "taCobrar, @IdCompraGrabado, @IdCompraExcento, @IdRenta, @IdCXCEmpCol, @IdCXCEmpD"& _ 
                "ol, @IdDiferencial, @IdDiferencialGasto, @IdPeriodo, @IdCxCHabitacion, @IdDifere"& _ 
                "nciaCaja, @IdICT, @IdServicio, @IdTravelCheck, @MontoAdelanto, @IdCaja, @IdPropi"& _ 
                "na, @IdTCXC, @IdPrepagoCol, @IdPrepagoDol, @IdOtrosIng, @IdInteresPres, @IdCosto"& _ 
                "VPrep, @IdCostoV, @IdVE, @IdVL, @IdComi, @IdComDep, @IdCreditoCompras, @IdIngres"& _ 
                "oAjCXCMenor, @IdPerdidaAjCXCMenor, @IdCreditoComp, @IdCuentaPorCobrarD, @IdImpue"& _ 
                "stoRenta, @PorcImpuestoRenta);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT id, IdImpuestoVenta, IdCuentaCobrar, IdCo"& _ 
                "mpraGrabado, IdCompraExcento, IdRenta, IdCXCEmpCol, IdCXCEmpDol, IdDiferencial, "& _ 
                "IdDiferencialGasto, IdPeriodo, IdCxCHabitacion, IdDiferenciaCaja, IdICT, IdServi"& _ 
                "cio, IdTravelCheck, MontoAdelanto, IdCaja, IdPropina, IdTCXC, IdPrepagoCol, IdPr"& _ 
                "epagoDol, IdOtrosIng, IdInteresPres, IdCostoVPrep, IdCostoV, IdVE, IdVL, IdComi,"& _ 
                " IdComDep, IdCreditoCompras, IdIngresoAjCXCMenor, IdPerdidaAjCXCMenor, IdCredito"& _ 
                "Comp, IdCuentaPorCobrarD, IdImpuestoRenta, PorcImpuestoRenta FROM SettingCuentaC"& _ 
                "ontable WHERE (id = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdImpuestoVenta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdImpuestoVenta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCuentaCobrar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCuentaCobrar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCompraGrabado", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCompraGrabado", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCompraExcento", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCompraExcento", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdRenta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdRenta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCXCEmpCol", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCXCEmpCol", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCXCEmpDol", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCXCEmpDol", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDiferencial", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDiferencial", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDiferencialGasto", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDiferencialGasto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdPeriodo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPeriodo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCxCHabitacion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCxCHabitacion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDiferenciaCaja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDiferenciaCaja", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdICT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdICT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdServicio", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdServicio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdTravelCheck", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdTravelCheck", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MontoAdelanto", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MontoAdelanto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCaja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCaja", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdPropina", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPropina", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdTCXC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdTCXC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdPrepagoCol", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPrepagoCol", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdPrepagoDol", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPrepagoDol", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdOtrosIng", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdOtrosIng", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdInteresPres", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdInteresPres", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCostoVPrep", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCostoVPrep", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCostoV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCostoV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdVE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdVL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdVL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdComi", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdComi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdComDep", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdComDep", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCreditoCompras", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCreditoCompras", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdIngresoAjCXCMenor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdIngresoAjCXCMenor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdPerdidaAjCXCMenor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPerdidaAjCXCMenor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCreditoComp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCreditoComp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCuentaPorCobrarD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCuentaPorCobrarD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdImpuestoRenta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdImpuestoRenta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PorcImpuestoRenta", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PorcImpuestoRenta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [SettingCuentaContable] SET [IdImpuestoVenta] = @IdImpuestoVenta, [IdCuent"& _ 
                "aCobrar] = @IdCuentaCobrar, [IdCompraGrabado] = @IdCompraGrabado, [IdCompraExcen"& _ 
                "to] = @IdCompraExcento, [IdRenta] = @IdRenta, [IdCXCEmpCol] = @IdCXCEmpCol, [IdC"& _ 
                "XCEmpDol] = @IdCXCEmpDol, [IdDiferencial] = @IdDiferencial, [IdDiferencialGasto]"& _ 
                " = @IdDiferencialGasto, [IdPeriodo] = @IdPeriodo, [IdCxCHabitacion] = @IdCxCHabi"& _ 
                "tacion, [IdDiferenciaCaja] = @IdDiferenciaCaja, [IdICT] = @IdICT, [IdServicio] ="& _ 
                " @IdServicio, [IdTravelCheck] = @IdTravelCheck, [MontoAdelanto] = @MontoAdelanto"& _ 
                ", [IdCaja] = @IdCaja, [IdPropina] = @IdPropina, [IdTCXC] = @IdTCXC, [IdPrepagoCo"& _ 
                "l] = @IdPrepagoCol, [IdPrepagoDol] = @IdPrepagoDol, [IdOtrosIng] = @IdOtrosIng, "& _ 
                "[IdInteresPres] = @IdInteresPres, [IdCostoVPrep] = @IdCostoVPrep, [IdCostoV] = @"& _ 
                "IdCostoV, [IdVE] = @IdVE, [IdVL] = @IdVL, [IdComi] = @IdComi, [IdComDep] = @IdCo"& _ 
                "mDep, [IdCreditoCompras] = @IdCreditoCompras, [IdIngresoAjCXCMenor] = @IdIngreso"& _ 
                "AjCXCMenor, [IdPerdidaAjCXCMenor] = @IdPerdidaAjCXCMenor, [IdCreditoComp] = @IdC"& _ 
                "reditoComp, [IdCuentaPorCobrarD] = @IdCuentaPorCobrarD, [IdImpuestoRenta] = @IdI"& _ 
                "mpuestoRenta, [PorcImpuestoRenta] = @PorcImpuestoRenta WHERE (([id] = @Original_"& _ 
                "id) AND ([IdImpuestoVenta] = @Original_IdImpuestoVenta) AND ([IdCuentaCobrar] = "& _ 
                "@Original_IdCuentaCobrar) AND ([IdCompraGrabado] = @Original_IdCompraGrabado) AN"& _ 
                "D ([IdCompraExcento] = @Original_IdCompraExcento) AND ([IdRenta] = @Original_IdR"& _ 
                "enta) AND ([IdCXCEmpCol] = @Original_IdCXCEmpCol) AND ([IdCXCEmpDol] = @Original"& _ 
                "_IdCXCEmpDol) AND ([IdDiferencial] = @Original_IdDiferencial) AND ([IdDiferencia"& _ 
                "lGasto] = @Original_IdDiferencialGasto) AND ([IdPeriodo] = @Original_IdPeriodo) "& _ 
                "AND ([IdCxCHabitacion] = @Original_IdCxCHabitacion) AND ([IdDiferenciaCaja] = @O"& _ 
                "riginal_IdDiferenciaCaja) AND ([IdICT] = @Original_IdICT) AND ([IdServicio] = @O"& _ 
                "riginal_IdServicio) AND ([IdTravelCheck] = @Original_IdTravelCheck) AND ([MontoA"& _ 
                "delanto] = @Original_MontoAdelanto) AND ([IdCaja] = @Original_IdCaja) AND ([IdPr"& _ 
                "opina] = @Original_IdPropina) AND ([IdTCXC] = @Original_IdTCXC) AND ([IdPrepagoC"& _ 
                "ol] = @Original_IdPrepagoCol) AND ([IdPrepagoDol] = @Original_IdPrepagoDol) AND "& _ 
                "([IdOtrosIng] = @Original_IdOtrosIng) AND ([IdInteresPres] = @Original_IdInteres"& _ 
                "Pres) AND ([IdCostoVPrep] = @Original_IdCostoVPrep) AND ([IdCostoV] = @Original_"& _ 
                "IdCostoV) AND ([IdVE] = @Original_IdVE) AND ([IdVL] = @Original_IdVL) AND ([IdCo"& _ 
                "mi] = @Original_IdComi) AND ([IdComDep] = @Original_IdComDep) AND ([IdCreditoCom"& _ 
                "pras] = @Original_IdCreditoCompras) AND ([IdIngresoAjCXCMenor] = @Original_IdIng"& _ 
                "resoAjCXCMenor) AND ([IdPerdidaAjCXCMenor] = @Original_IdPerdidaAjCXCMenor) AND "& _ 
                "([IdCreditoComp] = @Original_IdCreditoComp) AND ([IdCuentaPorCobrarD] = @Origina"& _ 
                "l_IdCuentaPorCobrarD) AND ([IdImpuestoRenta] = @Original_IdImpuestoRenta) AND (["& _ 
                "PorcImpuestoRenta] = @Original_PorcImpuestoRenta));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT id, IdImpuestoVenta,"& _ 
                " IdCuentaCobrar, IdCompraGrabado, IdCompraExcento, IdRenta, IdCXCEmpCol, IdCXCEm"& _ 
                "pDol, IdDiferencial, IdDiferencialGasto, IdPeriodo, IdCxCHabitacion, IdDiferenci"& _ 
                "aCaja, IdICT, IdServicio, IdTravelCheck, MontoAdelanto, IdCaja, IdPropina, IdTCX"& _ 
                "C, IdPrepagoCol, IdPrepagoDol, IdOtrosIng, IdInteresPres, IdCostoVPrep, IdCostoV"& _ 
                ", IdVE, IdVL, IdComi, IdComDep, IdCreditoCompras, IdIngresoAjCXCMenor, IdPerdida"& _ 
                "AjCXCMenor, IdCreditoComp, IdCuentaPorCobrarD, IdImpuestoRenta, PorcImpuestoRent"& _ 
                "a FROM SettingCuentaContable WHERE (id = @id)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdImpuestoVenta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdImpuestoVenta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCuentaCobrar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCuentaCobrar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCompraGrabado", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCompraGrabado", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCompraExcento", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCompraExcento", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdRenta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdRenta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCXCEmpCol", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCXCEmpCol", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCXCEmpDol", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCXCEmpDol", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDiferencial", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDiferencial", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDiferencialGasto", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDiferencialGasto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdPeriodo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPeriodo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCxCHabitacion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCxCHabitacion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDiferenciaCaja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDiferenciaCaja", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdICT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdICT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdServicio", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdServicio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdTravelCheck", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdTravelCheck", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MontoAdelanto", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MontoAdelanto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCaja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCaja", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdPropina", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPropina", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdTCXC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdTCXC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdPrepagoCol", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPrepagoCol", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdPrepagoDol", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPrepagoDol", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdOtrosIng", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdOtrosIng", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdInteresPres", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdInteresPres", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCostoVPrep", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCostoVPrep", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCostoV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCostoV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdVE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdVL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdVL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdComi", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdComi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdComDep", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdComDep", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCreditoCompras", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCreditoCompras", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdIngresoAjCXCMenor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdIngresoAjCXCMenor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdPerdidaAjCXCMenor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPerdidaAjCXCMenor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCreditoComp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCreditoComp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdCuentaPorCobrarD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCuentaPorCobrarD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdImpuestoRenta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdImpuestoRenta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PorcImpuestoRenta", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PorcImpuestoRenta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdImpuestoVenta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdImpuestoVenta", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCuentaCobrar", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCuentaCobrar", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCompraGrabado", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCompraGrabado", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCompraExcento", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCompraExcento", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdRenta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdRenta", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCXCEmpCol", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCXCEmpCol", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCXCEmpDol", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCXCEmpDol", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDiferencial", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDiferencial", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDiferencialGasto", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDiferencialGasto", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdPeriodo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPeriodo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCxCHabitacion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCxCHabitacion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDiferenciaCaja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDiferenciaCaja", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdICT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdICT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdServicio", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdServicio", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdTravelCheck", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdTravelCheck", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MontoAdelanto", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MontoAdelanto", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCaja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCaja", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdPropina", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPropina", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdTCXC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdTCXC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdPrepagoCol", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPrepagoCol", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdPrepagoDol", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPrepagoDol", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdOtrosIng", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdOtrosIng", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdInteresPres", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdInteresPres", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCostoVPrep", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCostoVPrep", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCostoV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCostoV", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdVE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdVE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdVL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdVL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdComi", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdComi", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdComDep", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdComDep", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCreditoCompras", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCreditoCompras", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdIngresoAjCXCMenor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdIngresoAjCXCMenor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdPerdidaAjCXCMenor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPerdidaAjCXCMenor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCreditoComp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCreditoComp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdCuentaPorCobrarD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdCuentaPorCobrarD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdImpuestoRenta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdImpuestoRenta", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PorcImpuestoRenta", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PorcImpuestoRenta", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Contabilidad.My.MySettings.Default.ContabilidadConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     id, IdImpuestoVenta, IdCuentaCobrar, IdCompraGrabado, IdCompraExcento,"& _ 
                " IdRenta, IdCXCEmpCol, IdCXCEmpDol, IdDiferencial, IdDiferencialGasto, IdPeriodo"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      IdCxCHabitacion, IdDiferenciaCaja, IdICT, IdServicio, "& _ 
                "IdTravelCheck, MontoAdelanto, IdCaja, IdPropina, IdTCXC, IdPrepagoCol, IdPrepago"& _ 
                "Dol, IdOtrosIng, IdInteresPres, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      IdCostoVPrep, IdCostoV, "& _ 
                "IdVE, IdVL, IdComi, IdComDep, IdCreditoCompras, IdIngresoAjCXCMenor, IdPerdidaAj"& _ 
                "CXCMenor, IdCreditoComp, IdCuentaPorCobrarD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      IdImpuestoR"& _ 
                "enta, PorcImpuestoRenta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         SettingCuentaContable"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dtsSetting.SettingCuentaContableDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dtsSetting.SettingCuentaContableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dtsSetting.SettingCuentaContableDataTable = New dtsSetting.SettingCuentaContableDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dtsSetting.SettingCuentaContableDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dtsSetting) As Integer
            Return Me.Adapter.Update(dataSet, "SettingCuentaContable")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_id As Integer,  _
                    ByVal Original_IdImpuestoVenta As Integer,  _
                    ByVal Original_IdCuentaCobrar As Integer,  _
                    ByVal Original_IdCompraGrabado As Integer,  _
                    ByVal Original_IdCompraExcento As Integer,  _
                    ByVal Original_IdRenta As Integer,  _
                    ByVal Original_IdCXCEmpCol As Integer,  _
                    ByVal Original_IdCXCEmpDol As Integer,  _
                    ByVal Original_IdDiferencial As Integer,  _
                    ByVal Original_IdDiferencialGasto As Integer,  _
                    ByVal Original_IdPeriodo As Integer,  _
                    ByVal Original_IdCxCHabitacion As Integer,  _
                    ByVal Original_IdDiferenciaCaja As Integer,  _
                    ByVal Original_IdICT As Integer,  _
                    ByVal Original_IdServicio As Integer,  _
                    ByVal Original_IdTravelCheck As Integer,  _
                    ByVal Original_MontoAdelanto As Double,  _
                    ByVal Original_IdCaja As Integer,  _
                    ByVal Original_IdPropina As Integer,  _
                    ByVal Original_IdTCXC As Integer,  _
                    ByVal Original_IdPrepagoCol As Integer,  _
                    ByVal Original_IdPrepagoDol As Integer,  _
                    ByVal Original_IdOtrosIng As Integer,  _
                    ByVal Original_IdInteresPres As Integer,  _
                    ByVal Original_IdCostoVPrep As Integer,  _
                    ByVal Original_IdCostoV As Integer,  _
                    ByVal Original_IdVE As Integer,  _
                    ByVal Original_IdVL As Integer,  _
                    ByVal Original_IdComi As Integer,  _
                    ByVal Original_IdComDep As Integer,  _
                    ByVal Original_IdCreditoCompras As Integer,  _
                    ByVal Original_IdIngresoAjCXCMenor As Integer,  _
                    ByVal Original_IdPerdidaAjCXCMenor As Integer,  _
                    ByVal Original_IdCreditoComp As Integer,  _
                    ByVal Original_IdCuentaPorCobrarD As Integer,  _
                    ByVal Original_IdImpuestoRenta As Integer,  _
                    ByVal Original_PorcImpuestoRenta As Double) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_id,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_IdImpuestoVenta,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_IdCuentaCobrar,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_IdCompraGrabado,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_IdCompraExcento,Integer)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_IdRenta,Integer)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_IdCXCEmpCol,Integer)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_IdCXCEmpDol,Integer)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_IdDiferencial,Integer)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_IdDiferencialGasto,Integer)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_IdPeriodo,Integer)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_IdCxCHabitacion,Integer)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_IdDiferenciaCaja,Integer)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_IdICT,Integer)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_IdServicio,Integer)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_IdTravelCheck,Integer)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_MontoAdelanto,Double)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_IdCaja,Integer)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_IdPropina,Integer)
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_IdTCXC,Integer)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_IdPrepagoCol,Integer)
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_IdPrepagoDol,Integer)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_IdOtrosIng,Integer)
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_IdInteresPres,Integer)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_IdCostoVPrep,Integer)
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_IdCostoV,Integer)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_IdVE,Integer)
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_IdVL,Integer)
            Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_IdComi,Integer)
            Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_IdComDep,Integer)
            Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_IdCreditoCompras,Integer)
            Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_IdIngresoAjCXCMenor,Integer)
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_IdPerdidaAjCXCMenor,Integer)
            Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_IdCreditoComp,Integer)
            Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_IdCuentaPorCobrarD,Integer)
            Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_IdImpuestoRenta,Integer)
            Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_PorcImpuestoRenta,Double)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal IdImpuestoVenta As Integer,  _
                    ByVal IdCuentaCobrar As Integer,  _
                    ByVal IdCompraGrabado As Integer,  _
                    ByVal IdCompraExcento As Integer,  _
                    ByVal IdRenta As Integer,  _
                    ByVal IdCXCEmpCol As Integer,  _
                    ByVal IdCXCEmpDol As Integer,  _
                    ByVal IdDiferencial As Integer,  _
                    ByVal IdDiferencialGasto As Integer,  _
                    ByVal IdPeriodo As Integer,  _
                    ByVal IdCxCHabitacion As Integer,  _
                    ByVal IdDiferenciaCaja As Integer,  _
                    ByVal IdICT As Integer,  _
                    ByVal IdServicio As Integer,  _
                    ByVal IdTravelCheck As Integer,  _
                    ByVal MontoAdelanto As Double,  _
                    ByVal IdCaja As Integer,  _
                    ByVal IdPropina As Integer,  _
                    ByVal IdTCXC As Integer,  _
                    ByVal IdPrepagoCol As Integer,  _
                    ByVal IdPrepagoDol As Integer,  _
                    ByVal IdOtrosIng As Integer,  _
                    ByVal IdInteresPres As Integer,  _
                    ByVal IdCostoVPrep As Integer,  _
                    ByVal IdCostoV As Integer,  _
                    ByVal IdVE As Integer,  _
                    ByVal IdVL As Integer,  _
                    ByVal IdComi As Integer,  _
                    ByVal IdComDep As Integer,  _
                    ByVal IdCreditoCompras As Integer,  _
                    ByVal IdIngresoAjCXCMenor As Integer,  _
                    ByVal IdPerdidaAjCXCMenor As Integer,  _
                    ByVal IdCreditoComp As Integer,  _
                    ByVal IdCuentaPorCobrarD As Integer,  _
                    ByVal IdImpuestoRenta As Integer,  _
                    ByVal PorcImpuestoRenta As Double) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(IdImpuestoVenta,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(IdCuentaCobrar,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(IdCompraGrabado,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(IdCompraExcento,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(IdRenta,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(IdCXCEmpCol,Integer)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(IdCXCEmpDol,Integer)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(IdDiferencial,Integer)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(IdDiferencialGasto,Integer)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(IdPeriodo,Integer)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(IdCxCHabitacion,Integer)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(IdDiferenciaCaja,Integer)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(IdICT,Integer)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(IdServicio,Integer)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(IdTravelCheck,Integer)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(MontoAdelanto,Double)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(IdCaja,Integer)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(IdPropina,Integer)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(IdTCXC,Integer)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(IdPrepagoCol,Integer)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(IdPrepagoDol,Integer)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(IdOtrosIng,Integer)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(IdInteresPres,Integer)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(IdCostoVPrep,Integer)
            Me.Adapter.InsertCommand.Parameters(24).Value = CType(IdCostoV,Integer)
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(IdVE,Integer)
            Me.Adapter.InsertCommand.Parameters(26).Value = CType(IdVL,Integer)
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(IdComi,Integer)
            Me.Adapter.InsertCommand.Parameters(28).Value = CType(IdComDep,Integer)
            Me.Adapter.InsertCommand.Parameters(29).Value = CType(IdCreditoCompras,Integer)
            Me.Adapter.InsertCommand.Parameters(30).Value = CType(IdIngresoAjCXCMenor,Integer)
            Me.Adapter.InsertCommand.Parameters(31).Value = CType(IdPerdidaAjCXCMenor,Integer)
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(IdCreditoComp,Integer)
            Me.Adapter.InsertCommand.Parameters(33).Value = CType(IdCuentaPorCobrarD,Integer)
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(IdImpuestoRenta,Integer)
            Me.Adapter.InsertCommand.Parameters(35).Value = CType(PorcImpuestoRenta,Double)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal IdImpuestoVenta As Integer,  _
                    ByVal IdCuentaCobrar As Integer,  _
                    ByVal IdCompraGrabado As Integer,  _
                    ByVal IdCompraExcento As Integer,  _
                    ByVal IdRenta As Integer,  _
                    ByVal IdCXCEmpCol As Integer,  _
                    ByVal IdCXCEmpDol As Integer,  _
                    ByVal IdDiferencial As Integer,  _
                    ByVal IdDiferencialGasto As Integer,  _
                    ByVal IdPeriodo As Integer,  _
                    ByVal IdCxCHabitacion As Integer,  _
                    ByVal IdDiferenciaCaja As Integer,  _
                    ByVal IdICT As Integer,  _
                    ByVal IdServicio As Integer,  _
                    ByVal IdTravelCheck As Integer,  _
                    ByVal MontoAdelanto As Double,  _
                    ByVal IdCaja As Integer,  _
                    ByVal IdPropina As Integer,  _
                    ByVal IdTCXC As Integer,  _
                    ByVal IdPrepagoCol As Integer,  _
                    ByVal IdPrepagoDol As Integer,  _
                    ByVal IdOtrosIng As Integer,  _
                    ByVal IdInteresPres As Integer,  _
                    ByVal IdCostoVPrep As Integer,  _
                    ByVal IdCostoV As Integer,  _
                    ByVal IdVE As Integer,  _
                    ByVal IdVL As Integer,  _
                    ByVal IdComi As Integer,  _
                    ByVal IdComDep As Integer,  _
                    ByVal IdCreditoCompras As Integer,  _
                    ByVal IdIngresoAjCXCMenor As Integer,  _
                    ByVal IdPerdidaAjCXCMenor As Integer,  _
                    ByVal IdCreditoComp As Integer,  _
                    ByVal IdCuentaPorCobrarD As Integer,  _
                    ByVal IdImpuestoRenta As Integer,  _
                    ByVal PorcImpuestoRenta As Double,  _
                    ByVal Original_id As Integer,  _
                    ByVal Original_IdImpuestoVenta As Integer,  _
                    ByVal Original_IdCuentaCobrar As Integer,  _
                    ByVal Original_IdCompraGrabado As Integer,  _
                    ByVal Original_IdCompraExcento As Integer,  _
                    ByVal Original_IdRenta As Integer,  _
                    ByVal Original_IdCXCEmpCol As Integer,  _
                    ByVal Original_IdCXCEmpDol As Integer,  _
                    ByVal Original_IdDiferencial As Integer,  _
                    ByVal Original_IdDiferencialGasto As Integer,  _
                    ByVal Original_IdPeriodo As Integer,  _
                    ByVal Original_IdCxCHabitacion As Integer,  _
                    ByVal Original_IdDiferenciaCaja As Integer,  _
                    ByVal Original_IdICT As Integer,  _
                    ByVal Original_IdServicio As Integer,  _
                    ByVal Original_IdTravelCheck As Integer,  _
                    ByVal Original_MontoAdelanto As Double,  _
                    ByVal Original_IdCaja As Integer,  _
                    ByVal Original_IdPropina As Integer,  _
                    ByVal Original_IdTCXC As Integer,  _
                    ByVal Original_IdPrepagoCol As Integer,  _
                    ByVal Original_IdPrepagoDol As Integer,  _
                    ByVal Original_IdOtrosIng As Integer,  _
                    ByVal Original_IdInteresPres As Integer,  _
                    ByVal Original_IdCostoVPrep As Integer,  _
                    ByVal Original_IdCostoV As Integer,  _
                    ByVal Original_IdVE As Integer,  _
                    ByVal Original_IdVL As Integer,  _
                    ByVal Original_IdComi As Integer,  _
                    ByVal Original_IdComDep As Integer,  _
                    ByVal Original_IdCreditoCompras As Integer,  _
                    ByVal Original_IdIngresoAjCXCMenor As Integer,  _
                    ByVal Original_IdPerdidaAjCXCMenor As Integer,  _
                    ByVal Original_IdCreditoComp As Integer,  _
                    ByVal Original_IdCuentaPorCobrarD As Integer,  _
                    ByVal Original_IdImpuestoRenta As Integer,  _
                    ByVal Original_PorcImpuestoRenta As Double,  _
                    ByVal id As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(IdImpuestoVenta,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(IdCuentaCobrar,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(IdCompraGrabado,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(IdCompraExcento,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(IdRenta,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(IdCXCEmpCol,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(IdCXCEmpDol,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(IdDiferencial,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(IdDiferencialGasto,Integer)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(IdPeriodo,Integer)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(IdCxCHabitacion,Integer)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(IdDiferenciaCaja,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(IdICT,Integer)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(IdServicio,Integer)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(IdTravelCheck,Integer)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(MontoAdelanto,Double)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(IdCaja,Integer)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(IdPropina,Integer)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(IdTCXC,Integer)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(IdPrepagoCol,Integer)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(IdPrepagoDol,Integer)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(IdOtrosIng,Integer)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(IdInteresPres,Integer)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(IdCostoVPrep,Integer)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(IdCostoV,Integer)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(IdVE,Integer)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(IdVL,Integer)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(IdComi,Integer)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(IdComDep,Integer)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(IdCreditoCompras,Integer)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(IdIngresoAjCXCMenor,Integer)
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(IdPerdidaAjCXCMenor,Integer)
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(IdCreditoComp,Integer)
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(IdCuentaPorCobrarD,Integer)
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(IdImpuestoRenta,Integer)
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(PorcImpuestoRenta,Double)
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_id,Integer)
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_IdImpuestoVenta,Integer)
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_IdCuentaCobrar,Integer)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_IdCompraGrabado,Integer)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_IdCompraExcento,Integer)
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_IdRenta,Integer)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_IdCXCEmpCol,Integer)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_IdCXCEmpDol,Integer)
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_IdDiferencial,Integer)
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_IdDiferencialGasto,Integer)
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_IdPeriodo,Integer)
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_IdCxCHabitacion,Integer)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_IdDiferenciaCaja,Integer)
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_IdICT,Integer)
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_IdServicio,Integer)
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_IdTravelCheck,Integer)
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_MontoAdelanto,Double)
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_IdCaja,Integer)
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_IdPropina,Integer)
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_IdTCXC,Integer)
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_IdPrepagoCol,Integer)
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_IdPrepagoDol,Integer)
            Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_IdOtrosIng,Integer)
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_IdInteresPres,Integer)
            Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_IdCostoVPrep,Integer)
            Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_IdCostoV,Integer)
            Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_IdVE,Integer)
            Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_IdVL,Integer)
            Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_IdComi,Integer)
            Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_IdComDep,Integer)
            Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_IdCreditoCompras,Integer)
            Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_IdIngresoAjCXCMenor,Integer)
            Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_IdPerdidaAjCXCMenor,Integer)
            Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_IdCreditoComp,Integer)
            Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_IdCuentaPorCobrarD,Integer)
            Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_IdImpuestoRenta,Integer)
            Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_PorcImpuestoRenta,Double)
            Me.Adapter.UpdateCommand.Parameters(73).Value = CType(id,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal IdImpuestoVenta As Integer,  _
                    ByVal IdCuentaCobrar As Integer,  _
                    ByVal IdCompraGrabado As Integer,  _
                    ByVal IdCompraExcento As Integer,  _
                    ByVal IdRenta As Integer,  _
                    ByVal IdCXCEmpCol As Integer,  _
                    ByVal IdCXCEmpDol As Integer,  _
                    ByVal IdDiferencial As Integer,  _
                    ByVal IdDiferencialGasto As Integer,  _
                    ByVal IdPeriodo As Integer,  _
                    ByVal IdCxCHabitacion As Integer,  _
                    ByVal IdDiferenciaCaja As Integer,  _
                    ByVal IdICT As Integer,  _
                    ByVal IdServicio As Integer,  _
                    ByVal IdTravelCheck As Integer,  _
                    ByVal MontoAdelanto As Double,  _
                    ByVal IdCaja As Integer,  _
                    ByVal IdPropina As Integer,  _
                    ByVal IdTCXC As Integer,  _
                    ByVal IdPrepagoCol As Integer,  _
                    ByVal IdPrepagoDol As Integer,  _
                    ByVal IdOtrosIng As Integer,  _
                    ByVal IdInteresPres As Integer,  _
                    ByVal IdCostoVPrep As Integer,  _
                    ByVal IdCostoV As Integer,  _
                    ByVal IdVE As Integer,  _
                    ByVal IdVL As Integer,  _
                    ByVal IdComi As Integer,  _
                    ByVal IdComDep As Integer,  _
                    ByVal IdCreditoCompras As Integer,  _
                    ByVal IdIngresoAjCXCMenor As Integer,  _
                    ByVal IdPerdidaAjCXCMenor As Integer,  _
                    ByVal IdCreditoComp As Integer,  _
                    ByVal IdCuentaPorCobrarD As Integer,  _
                    ByVal IdImpuestoRenta As Integer,  _
                    ByVal PorcImpuestoRenta As Double,  _
                    ByVal Original_id As Integer,  _
                    ByVal Original_IdImpuestoVenta As Integer,  _
                    ByVal Original_IdCuentaCobrar As Integer,  _
                    ByVal Original_IdCompraGrabado As Integer,  _
                    ByVal Original_IdCompraExcento As Integer,  _
                    ByVal Original_IdRenta As Integer,  _
                    ByVal Original_IdCXCEmpCol As Integer,  _
                    ByVal Original_IdCXCEmpDol As Integer,  _
                    ByVal Original_IdDiferencial As Integer,  _
                    ByVal Original_IdDiferencialGasto As Integer,  _
                    ByVal Original_IdPeriodo As Integer,  _
                    ByVal Original_IdCxCHabitacion As Integer,  _
                    ByVal Original_IdDiferenciaCaja As Integer,  _
                    ByVal Original_IdICT As Integer,  _
                    ByVal Original_IdServicio As Integer,  _
                    ByVal Original_IdTravelCheck As Integer,  _
                    ByVal Original_MontoAdelanto As Double,  _
                    ByVal Original_IdCaja As Integer,  _
                    ByVal Original_IdPropina As Integer,  _
                    ByVal Original_IdTCXC As Integer,  _
                    ByVal Original_IdPrepagoCol As Integer,  _
                    ByVal Original_IdPrepagoDol As Integer,  _
                    ByVal Original_IdOtrosIng As Integer,  _
                    ByVal Original_IdInteresPres As Integer,  _
                    ByVal Original_IdCostoVPrep As Integer,  _
                    ByVal Original_IdCostoV As Integer,  _
                    ByVal Original_IdVE As Integer,  _
                    ByVal Original_IdVL As Integer,  _
                    ByVal Original_IdComi As Integer,  _
                    ByVal Original_IdComDep As Integer,  _
                    ByVal Original_IdCreditoCompras As Integer,  _
                    ByVal Original_IdIngresoAjCXCMenor As Integer,  _
                    ByVal Original_IdPerdidaAjCXCMenor As Integer,  _
                    ByVal Original_IdCreditoComp As Integer,  _
                    ByVal Original_IdCuentaPorCobrarD As Integer,  _
                    ByVal Original_IdImpuestoRenta As Integer,  _
                    ByVal Original_PorcImpuestoRenta As Double) As Integer
            Return Me.Update(IdImpuestoVenta, IdCuentaCobrar, IdCompraGrabado, IdCompraExcento, IdRenta, IdCXCEmpCol, IdCXCEmpDol, IdDiferencial, IdDiferencialGasto, IdPeriodo, IdCxCHabitacion, IdDiferenciaCaja, IdICT, IdServicio, IdTravelCheck, MontoAdelanto, IdCaja, IdPropina, IdTCXC, IdPrepagoCol, IdPrepagoDol, IdOtrosIng, IdInteresPres, IdCostoVPrep, IdCostoV, IdVE, IdVL, IdComi, IdComDep, IdCreditoCompras, IdIngresoAjCXCMenor, IdPerdidaAjCXCMenor, IdCreditoComp, IdCuentaPorCobrarD, IdImpuestoRenta, PorcImpuestoRenta, Original_id, Original_IdImpuestoVenta, Original_IdCuentaCobrar, Original_IdCompraGrabado, Original_IdCompraExcento, Original_IdRenta, Original_IdCXCEmpCol, Original_IdCXCEmpDol, Original_IdDiferencial, Original_IdDiferencialGasto, Original_IdPeriodo, Original_IdCxCHabitacion, Original_IdDiferenciaCaja, Original_IdICT, Original_IdServicio, Original_IdTravelCheck, Original_MontoAdelanto, Original_IdCaja, Original_IdPropina, Original_IdTCXC, Original_IdPrepagoCol, Original_IdPrepagoDol, Original_IdOtrosIng, Original_IdInteresPres, Original_IdCostoVPrep, Original_IdCostoV, Original_IdVE, Original_IdVL, Original_IdComi, Original_IdComDep, Original_IdCreditoCompras, Original_IdIngresoAjCXCMenor, Original_IdPerdidaAjCXCMenor, Original_IdCreditoComp, Original_IdCuentaPorCobrarD, Original_IdImpuestoRenta, Original_PorcImpuestoRenta, Original_id)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _settingCuentaContableTableAdapter As SettingCuentaContableTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property SettingCuentaContableTableAdapter() As SettingCuentaContableTableAdapter
            Get
                Return Me._settingCuentaContableTableAdapter
            End Get
            Set
                Me._settingCuentaContableTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._settingCuentaContableTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._settingCuentaContableTableAdapter.Connection) Is Nothing)) Then
                    Return Me._settingCuentaContableTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._settingCuentaContableTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dtsSetting, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._settingCuentaContableTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.SettingCuentaContable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._settingCuentaContableTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dtsSetting, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._settingCuentaContableTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.SettingCuentaContable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._settingCuentaContableTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dtsSetting, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._settingCuentaContableTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.SettingCuentaContable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._settingCuentaContableTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dtsSetting) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._settingCuentaContableTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._settingCuentaContableTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._settingCuentaContableTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._settingCuentaContableTableAdapter, Me._settingCuentaContableTableAdapter.Connection)
                    Me._settingCuentaContableTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._settingCuentaContableTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._settingCuentaContableTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._settingCuentaContableTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._settingCuentaContableTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._settingCuentaContableTableAdapter) Is Nothing) Then
                    Me._settingCuentaContableTableAdapter.Connection = CType(revertConnections(Me._settingCuentaContableTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._settingCuentaContableTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
